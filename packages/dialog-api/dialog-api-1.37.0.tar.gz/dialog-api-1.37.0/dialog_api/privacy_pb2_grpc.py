# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import miscellaneous_pb2 as miscellaneous__pb2
from . import privacy_pb2 as privacy__pb2


class PrivacyStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.BlockUser = channel.unary_unary(
        '/dialog.Privacy/BlockUser',
        request_serializer=privacy__pb2.RequestBlockUser.SerializeToString,
        response_deserializer=miscellaneous__pb2.ResponseSeq.FromString,
        )
    self.UnblockUser = channel.unary_unary(
        '/dialog.Privacy/UnblockUser',
        request_serializer=privacy__pb2.RequestUnblockUser.SerializeToString,
        response_deserializer=miscellaneous__pb2.ResponseSeq.FromString,
        )
    self.LoadBlockedUsers = channel.unary_unary(
        '/dialog.Privacy/LoadBlockedUsers',
        request_serializer=privacy__pb2.RequestLoadBlockedUsers.SerializeToString,
        response_deserializer=privacy__pb2.ResponseLoadBlockedUsers.FromString,
        )


class PrivacyServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def BlockUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnblockUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LoadBlockedUsers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PrivacyServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'BlockUser': grpc.unary_unary_rpc_method_handler(
          servicer.BlockUser,
          request_deserializer=privacy__pb2.RequestBlockUser.FromString,
          response_serializer=miscellaneous__pb2.ResponseSeq.SerializeToString,
      ),
      'UnblockUser': grpc.unary_unary_rpc_method_handler(
          servicer.UnblockUser,
          request_deserializer=privacy__pb2.RequestUnblockUser.FromString,
          response_serializer=miscellaneous__pb2.ResponseSeq.SerializeToString,
      ),
      'LoadBlockedUsers': grpc.unary_unary_rpc_method_handler(
          servicer.LoadBlockedUsers,
          request_deserializer=privacy__pb2.RequestLoadBlockedUsers.FromString,
          response_serializer=privacy__pb2.ResponseLoadBlockedUsers.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dialog.Privacy', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
