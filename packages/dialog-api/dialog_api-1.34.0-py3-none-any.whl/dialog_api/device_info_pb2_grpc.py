# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import device_info_pb2 as device__info__pb2
from . import miscellaneous_pb2 as miscellaneous__pb2


class DeviceInfoStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.NotifyAboutDeviceInfo = channel.unary_unary(
        '/dialog.DeviceInfo/NotifyAboutDeviceInfo',
        request_serializer=device__info__pb2.RequestNotifyAboutDeviceInfo.SerializeToString,
        response_deserializer=miscellaneous__pb2.ResponseVoid.FromString,
        )


class DeviceInfoServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def NotifyAboutDeviceInfo(self, request, context):
    """/ Set info about current device
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DeviceInfoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'NotifyAboutDeviceInfo': grpc.unary_unary_rpc_method_handler(
          servicer.NotifyAboutDeviceInfo,
          request_deserializer=device__info__pb2.RequestNotifyAboutDeviceInfo.FromString,
          response_serializer=miscellaneous__pb2.ResponseVoid.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dialog.DeviceInfo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
