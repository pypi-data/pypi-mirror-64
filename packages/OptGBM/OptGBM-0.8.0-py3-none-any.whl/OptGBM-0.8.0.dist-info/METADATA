Metadata-Version: 2.1
Name: OptGBM
Version: 0.8.0
Summary: Optuna + LightGBM \= OptGBM
Home-page: UNKNOWN
Author: Kon
License: MIT License
Platform: UNKNOWN
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Requires-Dist: lightgbm (>=2.2.2)
Requires-Dist: numpy
Requires-Dist: optuna
Requires-Dist: pandas
Requires-Dist: scikit-learn (>=0.19.0)
Provides-Extra: develop
Requires-Dist: matplotlib ; extra == 'develop'

# OptGBM

[![Python package](https://github.com/Y-oHr-N/OptGBM/workflows/Python%20package/badge.svg?branch=master)](https://github.com/Y-oHr-N/OptGBM/actions?query=workflow%3A%22Python+package%22)
[![PyPI](https://img.shields.io/pypi/v/OptGBM)](https://pypi.org/project/OptGBM/)
[![PyPI - License](https://img.shields.io/pypi/l/OptGBM)](https://pypi.org/project/OptGBM/)
[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/Y-oHr-N/OptGBM/master)

OptGBM (= Optuna + LightGBM) provides a scikit-learn compatible estimator that tunes hyperparameters in LightGBM with Optuna.

## Examples

```python
import optgbm as lgb
from sklearn.datasets import load_boston

reg = lgb.LGBMRegressor(random_state=0)
X, y = load_boston(return_X_y=True)

reg.fit(X, y)

score = reg.score(X, y)
```

## Installation

```
pip install optgbm
```

## Testing

```
python setup.py test
```


