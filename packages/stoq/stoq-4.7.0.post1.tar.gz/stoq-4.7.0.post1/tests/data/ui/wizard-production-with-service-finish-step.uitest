wizard: ProductionWizard
GtkDialog(toplevel): title='New Production', hidden
  GtkBox(PluggableWizard-vbox, orientation=vertical):
    GtkBox(vbox1, orientation=vertical, expand=True, fill=True):
      ProxyLabel(header_lbl, fill=True): hidden
      GtkEventBox(slave_area, expand=True, fill=True): slave FinishOpenProductionOrderStep is attached
        GtkBox(step.vbox1, orientation=vertical):
          GtkEventBox(step.place_holder, expand=True, fill=True): slave ProductionMaterialListSlave is attached
            GtkBox(vbox1, orientation=vertical):
              GtkLabel(label1, fill=True): '<b>Listing all the components needed by the production:</b>'
              ObjectList(materials, expand=True, fill=True):
                column: title='Code'
                column: title='Category', expand
                column: title='Description', expand
                column: title='Unit'
                column: title='Needed'
                column: title='In Stock'
                column: title='To Purchase'
                column: title='To Make'
                row: '', '', 'Description', '', Decimal('1.000000'), Decimal('0'), Decimal('1.000000'), Decimal('0.000')
              GtkBox(hbox1, orientation=horizontal):
                GtkButton(edit_button): 'gtk-edit', insensitive
                ProxyCheckButton(start_production_check, expand=True, fill=True): 'Start Production even if there are missing components'
      ProxyLabel(notification_lbl, fill=True):
      GtkBox(hbox1, orientation=horizontal, fill=True, pack-end):
        GtkButtonBox(buttonbox, orientation=horizontal, expand=True, fill=True, pack-end):
          GtkButton(cancel_button): 'gtk-cancel'
          GtkButton(previous_button): 'gtk-go-back'
          GtkButton(next_button): '_Finish'
          GtkButton(ok_button): 'gtk-ok', hidden
    GtkBox(orientation=horizontal, fill=True, pack-end):
      GtkButtonBox(dialog-action_area1, orientation=horizontal, fill=True, pack-end):

model: ProductionOrder<1>
  cancel_date: None
  close_date: None
  description: 'Testing production wizard.'
  expected_start_date: None
  open_date: datetime.today()
  start_date: None
  status: 'opened'

model: Service<2>
  city_taxation_code: None
  p_iss: None
  service_list_item_code: None

model: ProductComponent<3>
  component_id: Product<5>
  design_reference: ''
  price: <currency $0>
  product_id: Product<4>
  quantity: Decimal('1.000')

model: Product<4>
  brand: ''
  c_benef: None
  cest: None
  consignment: False
  depth: Decimal('0')
  ex_tipi: None
  family: ''
  genero: None
  height: Decimal('0')
  internal_use: False
  is_composed: False
  is_grid: False
  is_package: False
  location: ''
  manage_stock: True
  model: ''
  ncm: None
  part_number: ''
  production_time: 1
  weight: Decimal('0')
  width: Decimal('0')
  yield_quantity: Decimal('1.000')

model: Product<5>
  brand: ''
  c_benef: None
  cest: None
  consignment: False
  depth: Decimal('0')
  ex_tipi: None
  family: ''
  genero: None
  height: Decimal('0')
  internal_use: False
  is_composed: False
  is_grid: False
  is_package: False
  location: ''
  manage_stock: True
  model: ''
  ncm: None
  part_number: ''
  production_time: 1
  weight: Decimal('0')
  width: Decimal('0')
  yield_quantity: Decimal('1.000')

model: ProductionItem<6>
  lost: Decimal('0.000')
  order_id: ProductionOrder<1>
  produced: Decimal('0.000')
  product_id: Product<4>
  quantity: Decimal('1.000')

model: ProductionService<7>
  order_id: ProductionOrder<1>
  quantity: Decimal('1.000')
  service_id: Service<2>

model: ProductionMaterial<8>
  allocated: Decimal('0.000')
  consumed: Decimal('0.000')
  lost: Decimal('0.000')
  needed: Decimal('1.000')
  order_id: ProductionOrder<1>
  product_id: Product<5>
  to_make: Decimal('0.000')
  to_purchase: Decimal('1.000')

