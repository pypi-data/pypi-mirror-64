wizard: ReceiveQuoteWizard
GtkDialog(toplevel): title='Receive Quote Wizard', hidden
  GtkBox(PluggableWizard-vbox, orientation=vertical):
    GtkBox(vbox1, orientation=vertical, expand=True, fill=True):
      ProxyLabel(header_lbl, fill=True): hidden
      GtkEventBox(slave_area, expand=True, fill=True): slave QuoteGroupItemsSelectionStep is attached
        GtkBox(step.vbox1, orientation=vertical):
          GtkLabel(step.header_label, fill=True): 'Select one or more quoted items to compose an order:'
          ObjectList(step.quoted_items, expand=True, fill=True):
            column: title=' '
            column: title='Description', expand
            column: title='Supplier', expand
            column: title='Quantity'
            column: title='Ordered'
            column: title='Cost'
            row: True, 'Description', 'Supplier', Decimal('8.000'), Decimal('0'), <currency $125>
          GtkButtonBox(step.hbuttonbox1, orientation=horizontal, fill=True):
            GtkButton(step.select_all_button, expand=True, fill=True): '_Select All'
            GtkButton(step.unselect_all_button, expand=True, fill=True): '_Unselect All'
            GtkButton(step.create_order_button, expand=True, fill=True): 'C_reate Orders'
            GtkButton(step.cancel_group_button, expand=True, fill=True): 'Cancel _Group'
      ProxyLabel(notification_lbl, fill=True):
      GtkBox(hbox1, orientation=horizontal, fill=True, pack-end):
        GtkButtonBox(buttonbox, orientation=horizontal, expand=True, fill=True, pack-end):
          GtkButton(cancel_button): 'gtk-cancel'
          GtkButton(previous_button): 'gtk-go-back'
          GtkButton(next_button): 'gtk-close'
          GtkButton(ok_button): 'gtk-ok', hidden
    GtkBox(orientation=horizontal, fill=True, pack-end):
      GtkButtonBox(dialog-action_area1, orientation=horizontal, fill=True, pack-end):

model: Quotation<1>
  group_id: NoneType<2>
  purchase_id: PurchaseOrder<3>

model: None
model: PurchaseOrder<3>
  confirm_date: None
  consigned: False
  discount_value: <currency $0>
  expected_freight: <currency $0>
  expected_pay_date: datetime.today()
  expected_receival_date: datetime.today()
  freight_type: 'fob'
  notes: ''
  open_date: datetime.datetime(2012, 1, 1, 0, 0)
  quote_deadline: None
  receival_date: None
  salesperson_name: ''
  status: 'cancelled'
  surcharge_value: <currency $0>
  transporter_id: NoneType<2>
  work_order_id: NoneType<2>

model: PurchaseItem<4>
  base_cost: <currency $125>
  cost: <currency $125>
  expected_receival_date: None
  icms_st_value: <currency $0>
  ipi_value: <currency $0>
  order_id: PurchaseOrder<3>
  parent_item_id: NoneType<2>
  quantity: Decimal('8.000')
  quantity_received: Decimal('0.000')
  quantity_returned: Decimal('0.000')
  quantity_sold: Decimal('0.000')

