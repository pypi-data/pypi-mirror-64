{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-spinner/paper-spinner.js","webpack:///./src/components/ha-dialog.ts","webpack:///./src/data/auth.ts","webpack:///./src/panels/config/users/dialog-add-user.ts"],"names":["__webpack_require__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_paper_spinner_behavior_js__WEBPACK_IMPORTED_MODULE_5__","template","html","setAttribute","Polymer","_template","is","behaviors","PaperSpinnerBehavior","MwcDialog","customElements","get","createCloseHeading","hass","title","localize","_decorate","customElement","_initialize","_MwcDialog","F","[object Object]","args","super","this","d","kind","static","key","value","style","css","__webpack_exports__","hassUrl","getSignedPath","fetchAuthProviders","createAuthForUser","location","protocol","host","path","callWS","type","fetch","credentials","async","userId","username","password","user_id","DialogAddUser","_LitElement","decorators","property","params","_params","_name","_username","_password","_group","SYSTEM_GROUP_ID_USER","_error","undefined","_loading","changedProperties","_get","_getPrototypeOf","prototype","call","addEventListener","ev","keyCode","_createUser","_close","_nameChanged","_maybePopulateUsername","_usernameChanged","_passwordChanged","_handleGroupChange","GROUPS","map","groupId","parts","split","length","toLowerCase","detail","item","getAttribute","preventDefault","user","createUser","err","code","id","deleteUser","userAddedCallback","LitElement"],"mappings":"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","file":"chunk.d70c8dc67f1a7d2e3710.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer layer-1\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-2\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-3\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-4\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a multiple color material design circular spinner.\n\n    <paper-spinner active></paper-spinner>\n\nThe default spinner cycles between four layers of colors; by default they are\nblue, red, yellow and green. It can be customized to cycle between four\ndifferent colors. Use <paper-spinner-lite> for single color spinners.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner alt=\"Loading contacts list\" active></paper-spinner>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`\n`--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`\n`--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`\n`--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n","import { customElement, CSSResult, css, html } from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\n// tslint:disable-next-line\nimport { Dialog } from \"@material/mwc-dialog\";\nimport { Constructor, HomeAssistant } from \"../types\";\n// tslint:disable-next-line\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import { HomeAssistant } from \"../types\";\n\nexport interface AuthProvider {\n  name: string;\n  id: string;\n  type: string;\n}\n\nexport interface Credential {\n  type: string;\n}\n\nexport interface SignedPath {\n  path: string;\n}\n\nexport const hassUrl = `${location.protocol}//${location.host}`;\n\nexport const getSignedPath = (\n  hass: HomeAssistant,\n  path: string\n): Promise<SignedPath> => hass.callWS({ type: \"auth/sign_path\", path });\n\nexport const fetchAuthProviders = () =>\n  fetch(\"/auth/providers\", {\n    credentials: \"same-origin\",\n  });\n\nexport const createAuthForUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  username: string,\n  password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/create\",\n    user_id: userId,\n    username,\n    password,\n  });\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\n\nimport \"../../../components/ha-dialog\";\nimport \"../../../resources/ha-style\";\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  customElement,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { AddUserDialogParams } from \"./show-dialog-add-user\";\nimport {\n  User,\n  SYSTEM_GROUP_ID_USER,\n  GROUPS,\n  createUser,\n  deleteUser,\n} from \"../../../data/user\";\nimport { createAuthForUser } from \"../../../data/auth\";\n\n@customElement(\"dialog-add-user\")\nexport class DialogAddUser extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _loading = false;\n  // Error message when can't talk to server etc\n  @property() private _error?: string;\n  @property() private _params?: AddUserDialogParams;\n  @property() private _name?: string;\n  @property() private _username?: string;\n  @property() private _password?: string;\n  @property() private _group?: string;\n\n  public showDialog(params: AddUserDialogParams) {\n    this._params = params;\n    this._name = \"\";\n    this._username = \"\";\n    this._password = \"\";\n    this._group = SYSTEM_GROUP_ID_USER;\n    this._error = undefined;\n    this._loading = false;\n  }\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._createUser(ev);\n      }\n    });\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    return html`\n      <ha-dialog\n        open\n        @closing=${this._close}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${this.hass.localize(\"ui.panel.config.users.add_user.caption\")}\n      >\n        <div>\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <paper-input\n            class=\"name\"\n            .label=${this.hass.localize(\"ui.panel.config.users.add_user.name\")}\n            .value=${this._name}\n            required\n            auto-validate\n            autocapitalize=\"on\"\n            error-message=\"Required\"\n            @value-changed=${this._nameChanged}\n            @blur=${this._maybePopulateUsername}\n          ></paper-input>\n          <paper-input\n            class=\"username\"\n            .label=${this.hass.localize(\n              \"ui.panel.config.users.add_user.username\"\n            )}\n            .value=${this._username}\n            required\n            auto-validate\n            autocapitalize=\"none\"\n            @value-changed=${this._usernameChanged}\n            error-message=\"Required\"\n          ></paper-input>\n          <paper-input\n            .label=${this.hass.localize(\n              \"ui.panel.config.users.add_user.password\"\n            )}\n            type=\"password\"\n            .value=${this._password}\n            required\n            auto-validate\n            @value-changed=${this._passwordChanged}\n            error-message=\"Required\"\n          ></paper-input>\n          <ha-paper-dropdown-menu\n            .label=${this.hass.localize(\"ui.panel.config.users.editor.group\")}\n          >\n            <paper-listbox\n              slot=\"dropdown-content\"\n              .selected=${this._group}\n              @iron-select=${this._handleGroupChange}\n              attr-for-selected=\"group-id\"\n            >\n              ${GROUPS.map(\n                (groupId) => html`\n                  <paper-item group-id=${groupId}>\n                    ${this.hass.localize(`groups.${groupId}`)}\n                  </paper-item>\n                `\n              )}\n            </paper-listbox>\n          </ha-paper-dropdown-menu>\n          ${this._group === SYSTEM_GROUP_ID_USER\n            ? html`\n                <br />\n                The users group is a work in progress. The user will be unable\n                to administer the instance via the UI. We're still auditing all\n                management API endpoints to ensure that they correctly limit\n                access to administrators.\n              `\n            : \"\"}\n        </div>\n        <mwc-button\n          slot=\"secondaryAction\"\n          @click=\"${this._close}\"\n          .disabled=${this._loading}\n        >\n          ${this.hass!.localize(\"ui.common.cancel\")}\n        </mwc-button>\n        ${this._loading\n          ? html`\n              <div slot=\"primaryAction\" class=\"submit-spinner\">\n                <paper-spinner active></paper-spinner>\n              </div>\n            `\n          : html`\n              <mwc-button\n                slot=\"primaryAction\"\n                .disabled=${!this._name || !this._username || !this._password}\n                @click=${this._createUser}\n              >\n                ${this.hass.localize(\"ui.panel.config.users.add_user.create\")}\n              </mwc-button>\n            `}\n      </ha-dialog>\n    `;\n  }\n\n  private _close() {\n    this._params = undefined;\n  }\n\n  private _maybePopulateUsername() {\n    if (this._username || !this._name) {\n      return;\n    }\n\n    const parts = this._name.split(\" \");\n\n    if (parts.length) {\n      this._username = parts[0].toLowerCase();\n    }\n  }\n\n  private _nameChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._name = ev.detail.value;\n  }\n\n  private _usernameChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._username = ev.detail.value;\n  }\n\n  private _passwordChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._password = ev.detail.value;\n  }\n\n  private async _handleGroupChange(ev): Promise<void> {\n    this._group = ev.detail.item.getAttribute(\"group-id\");\n  }\n\n  private async _createUser(ev) {\n    ev.preventDefault();\n    if (!this._name || !this._username || !this._password) {\n      return;\n    }\n\n    this._loading = true;\n    this._error = \"\";\n\n    let user: User;\n    try {\n      const userResponse = await createUser(this.hass, this._name, [\n        this._group!,\n      ]);\n      user = userResponse.user;\n    } catch (err) {\n      this._loading = false;\n      this._error = err.code;\n      return;\n    }\n\n    try {\n      await createAuthForUser(\n        this.hass,\n        user.id,\n        this._username,\n        this._password\n      );\n    } catch (err) {\n      await deleteUser(this.hass, user.id);\n      this._loading = false;\n      this._error = err.code;\n      return;\n    }\n\n    this._params!.userAddedCallback(user);\n    this._close();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-add-user\": DialogAddUser;\n  }\n}\n"],"sourceRoot":""}