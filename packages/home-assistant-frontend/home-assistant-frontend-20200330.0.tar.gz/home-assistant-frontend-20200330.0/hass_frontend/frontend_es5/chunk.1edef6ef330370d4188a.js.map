{"version":3,"sources":["webpack:///src/observer.ts","webpack:///src/utils.ts","webpack:///src/base-element.ts","webpack:///../src/directives/if-defined.ts","webpack:///src/form-element.ts","webpack:///../src/directives/style-map.ts","webpack:///src/mwc-ripple-base.ts","webpack:///src/mwc-ripple-css.ts","webpack:///src/mwc-ripple.ts"],"names":["observer","_observer","proto","propName","constructor","_observers","hasOwnProperty","observers","Map","forEach","v","k","set","userUpdated","updated","changedProperties","_this","this","call","get","undefined","addHasRemoveClass","element","addClass","className","classList","add","removeClass","remove","hasClass","contains","fn","optionsBlock","passive","document","addEventListener","removeEventListener","BaseElement","_LitElement","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","lit_element","key","value","mdcFoundation","destroy","mdcFoundationClass","createAdapter","init","createFoundation","__webpack_require__","d","__webpack_exports__","ifDefined","_lit_html_js__WEBPACK_IMPORTED_MODULE_0__","Object","part","name","committer","removeAttribute","setValue","FormElement","_BaseElement","_base_element__WEBPACK_IMPORTED_MODULE_0__","attachShadow","mode","delegatesFocus","formElement","focus","click","label","setAttribute","_get","prototype","mdcRoot","e","dispatchEvent","Event","styleMap","styleMapCache","WeakMap","styleInfo","parts","length","Error","style","has","cssText","strings","join","oldInfo","indexOf","removeProperty","_name","setProperty","mwc_ripple_base_RippleBase","RippleBase","primary","accent","unbounded","disabled","interactionNode","_assertThisInitialized","parent","parentNode","HTMLElement","ShadowRoot","host","classes","mdc-ripple-surface--primary","mdc-ripple-surface--accent","active","rippleOptions","_templateObject","ripple_directive","class_map","tslib_es6","type","Boolean","attribute","mwc_ripple_css_templateObject","Ripple","_RippleBase","mwc_ripple_classCallCheck","mwc_ripple_possibleConstructorReturn","mwc_ripple_getPrototypeOf","mwc_ripple_inherits","styles"],"mappings":"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","file":"chunk.1edef6ef330370d4188a.js","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {PropertyValues} from 'lit-element/lib/updating-element';\n\nexport interface Observer {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (value: any, old: any): void;\n}\n\nexport const observer = (observer: Observer) =>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (proto: any, propName: PropertyKey) => {\n      // if we haven't wrapped `updated` in this class, do so\n      if (!proto.constructor._observers) {\n        proto.constructor._observers = new Map<PropertyKey, Observer>();\n        const userUpdated = proto.updated;\n        proto.updated = function(changedProperties: PropertyValues) {\n          userUpdated.call(this, changedProperties);\n          changedProperties.forEach((v, k) => {\n            const observer = this.constructor._observers.get(k);\n            if (observer !== undefined) {\n              observer.call(this, this[k], v);\n            }\n          });\n        };\n        // clone any existing observers (superclasses)\n      } else if (!proto.constructor.hasOwnProperty('_observers')) {\n        const observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (v: any, k: PropertyKey) => proto.constructor._observers.set(k, v));\n      }\n      // set this method\n      proto.constructor._observers.set(propName, observer);\n    };\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * Return an element assigned to a given slot that matches the given selector\n */\n\nimport {matches} from '@material/dom/ponyfill';\n\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node: Node): node is Element => {\n  return node.nodeType === Node.ELEMENT_NODE;\n};\n\nexport function findAssignedElement(slot: HTMLSlotElement, selector: string) {\n  for (const node of slot.assignedNodes({flatten: true})) {\n    if (isNodeElement(node)) {\n      const el = (node as HTMLElement);\n      if (matches(el, selector)) {\n        return el;\n      }\n    }\n  }\n\n  return null;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Constructor<T> = new (...args: any[]) => T;\n\nexport function addHasRemoveClass(element: HTMLElement) {\n  return {\n    addClass: (className: string) => {\n      element.classList.add(className);\n    },\n    removeClass: (className: string) => {\n      element.classList.remove(className);\n    },\n    hasClass: (className: string) => element.classList.contains(className),\n  };\n}\n\nlet supportsPassive = false;\nconst fn = () => { /* empty listener */ };\nconst optionsBlock: AddEventListenerOptions = {\n  get passive() {\n    supportsPassive = true;\n    return false;\n  }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\n\nexport const deepActiveElementPath = (doc = window.document): Element[] => {\n  let activeElement = doc.activeElement;\n  const path: Element[] = [];\n\n  if (!activeElement) {\n    return path;\n  }\n\n  while (activeElement) {\n    path.push(activeElement);\n    if (activeElement.shadowRoot) {\n      activeElement = activeElement.shadowRoot.activeElement;\n    } else {\n      break;\n    }\n  }\n\n  return path;\n};\n\nexport const doesElementContainFocus = (element: HTMLElement): boolean => {\n  const activePath = deepActiveElementPath();\n\n  if (!activePath.length) {\n    return false;\n  }\n\n  const deepActiveElement = activePath[activePath.length - 1];\n  const focusEv =\n      new Event('check-if-focused', {bubbles: true, composed: true});\n  let composedPath: EventTarget[] = [];\n  const listener = (ev: Event) => {\n    composedPath = ev.composedPath();\n  };\n\n  document.body.addEventListener('check-if-focused', listener);\n  deepActiveElement.dispatchEvent(focusEv);\n  document.body.removeEventListener('check-if-focused', listener);\n\n  return composedPath.indexOf(element) !== -1;\n};\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport {MDCFoundation} from '@material/base';\nimport {LitElement} from 'lit-element';\n\nimport {Constructor} from './utils.js';\nexport {observer} from './observer.js';\nexport {addHasRemoveClass} from './utils.js';\nexport * from '@material/base/types.js';\n\nexport abstract class BaseElement extends LitElement {\n  /**\n   * Root element for MDC Foundation usage.\n   *\n   * Define in your component with the `@query` decorator\n   */\n  protected abstract mdcRoot: HTMLElement;\n\n  /**\n   * Return the foundation class for this component\n   */\n  protected abstract readonly mdcFoundationClass: Constructor<MDCFoundation>;\n\n  /**\n   * An instance of the MDC Foundation class to attach to the root element\n   */\n  protected abstract mdcFoundation: MDCFoundation;\n\n  /**\n   * Create the adapter for the `mdcFoundation`.\n   *\n   * Override and return an object with the Adapter's functions implemented:\n   *\n   *    {\n   *      addClass: () => {},\n   *      removeClass: () => {},\n   *      ...\n   *    }\n   */\n  protected abstract createAdapter(): {}\n\n  /**\n   * Create and attach the MDC Foundation to the instance\n   */\n  protected createFoundation() {\n    if (this.mdcFoundation !== undefined) {\n      this.mdcFoundation.destroy();\n    }\n    this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n    this.mdcFoundation.init();\n  }\n\n  protected firstUpdated() {\n    this.createFoundation();\n  }\n}\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value: unknown) => (part: Part) => {\n  if (value === undefined && part instanceof AttributePart) {\n    if (value !== part.value) {\n      const name = part.committer.name;\n      part.committer.element.removeAttribute(name);\n    }\n  } else {\n    part.setValue(value);\n  }\n});\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport {MDCRippleFoundation} from '@material/ripple/foundation.js';\n\nimport {BaseElement} from './base-element';\n\nexport * from './base-element';\n\nexport interface HTMLElementWithRipple extends HTMLElement {\n  ripple?: MDCRippleFoundation;\n}\n\nexport abstract class FormElement extends BaseElement {\n  /**\n   * Form-capable element in the component ShadowRoot.\n   *\n   * Define in your component with the `@query` decorator\n   */\n  protected abstract formElement: HTMLElement;\n\n  protected createRenderRoot() {\n    return this.attachShadow({mode: 'open', delegatesFocus: true});\n  }\n\n  /**\n   * Implement ripple getter for Ripple integration with mwc-formfield\n   */\n  readonly ripple?: MDCRippleFoundation;\n\n  click() {\n    if (this.formElement) {\n      this.formElement.focus();\n      this.formElement.click();\n    }\n  }\n\n  setAriaLabel(label: string) {\n    if (this.formElement) {\n      this.formElement.setAttribute('aria-label', label);\n    }\n  }\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.mdcRoot.addEventListener('change', (e) => {\n      this.dispatchEvent(new Event('change', e));\n    });\n  }\n}\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\nexport interface StyleInfo {\n  readonly [name: string]: string;\n}\n\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst styleMapCache = new WeakMap<AttributePart, StyleInfo>();\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS propertes. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo: StyleInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'style' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `styleMap` directive must be used in the style attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {style} = committer.element as HTMLElement;\n\n  // Handle static styles the first time we see a Part\n  if (!styleMapCache.has(part)) {\n    style.cssText = committer.strings.join(' ');\n  }\n\n  // Remove old properties that no longer exist in styleInfo\n  const oldInfo = styleMapCache.get(part);\n  for (const name in oldInfo) {\n    if (!(name in styleInfo)) {\n      if (name.indexOf('-') === -1) {\n        // tslint:disable-next-line:no-any\n        (style as any)[name] = null;\n      } else {\n        style.removeProperty(name);\n      }\n    }\n  }\n\n  // Add or update properties\n  for (const name in styleInfo) {\n    if (name.indexOf('-') === -1) {\n      // tslint:disable-next-line:no-any\n      (style as any)[name] = styleInfo[name];\n    } else {\n      style.setProperty(name, styleInfo[name]);\n    }\n  }\n  styleMapCache.set(part, styleInfo);\n});\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {html, LitElement, property} from 'lit-element';\nimport {classMap} from 'lit-html/directives/class-map';\n\nimport {ripple, RippleOptions} from './ripple-directive.js';\n\nexport class RippleBase extends LitElement {\n  @property({type: Boolean}) primary = false;\n\n  @property({type: Boolean}) active: boolean|undefined;\n\n  @property({type: Boolean}) accent = false;\n\n  @property({type: Boolean}) unbounded = false;\n\n  @property({type: Boolean}) disabled = false;\n\n  @property({attribute: false}) protected interactionNode: HTMLElement = this;\n\n  connectedCallback() {\n    if (this.interactionNode === this) {\n      const parent = this.parentNode as HTMLElement | ShadowRoot | null;\n      if (parent instanceof HTMLElement) {\n        this.interactionNode = parent;\n      } else if (\n          parent instanceof ShadowRoot && parent.host instanceof HTMLElement) {\n        this.interactionNode = parent.host;\n      }\n    }\n    super.connectedCallback();\n  }\n\n  // TODO(sorvell) #css: sizing.\n  protected render() {\n    const classes = {\n      'mdc-ripple-surface--primary': this.primary,\n      'mdc-ripple-surface--accent': this.accent,\n    };\n    const {disabled, unbounded, active, interactionNode} = this;\n    const rippleOptions: RippleOptions = {disabled, unbounded, interactionNode};\n    if (active !== undefined) {\n      rippleOptions.active = active;\n    }\n    return html`\n      <div .ripple=\"${ripple(rippleOptions)}\"\n          class=\"mdc-ripple-surface ${classMap(classes)}\"></div>`;\n  }\n}\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {css} from 'lit-element';\n\nexport const style = css`@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}.mdc-ripple-surface{--mdc-ripple-fg-size: 0;--mdc-ripple-left: 0;--mdc-ripple-top: 0;--mdc-ripple-fg-scale: 1;--mdc-ripple-fg-translate-end: 0;--mdc-ripple-fg-translate-start: 0;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative;outline:none;overflow:hidden}.mdc-ripple-surface::before,.mdc-ripple-surface::after{position:absolute;border-radius:50%;opacity:0;pointer-events:none;content:\"\"}.mdc-ripple-surface::before{transition:opacity 15ms linear,background-color 15ms linear;z-index:1}.mdc-ripple-surface.mdc-ripple-upgraded::before{transform:scale(var(--mdc-ripple-fg-scale, 1))}.mdc-ripple-surface.mdc-ripple-upgraded::after{top:0;left:0;transform:scale(0);transform-origin:center center}.mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after{top:var(--mdc-ripple-top, 0);left:var(--mdc-ripple-left, 0)}.mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after{animation:mdc-ripple-fg-radius-in 225ms forwards,mdc-ripple-fg-opacity-in 75ms forwards}.mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after{animation:mdc-ripple-fg-opacity-out 150ms;transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}.mdc-ripple-surface::before,.mdc-ripple-surface::after{background-color:#000}.mdc-ripple-surface:hover::before{opacity:.04}.mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.12}.mdc-ripple-surface:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.12}.mdc-ripple-surface.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.12}.mdc-ripple-surface::before,.mdc-ripple-surface::after{top:calc(50% - 100%);left:calc(50% - 100%);width:200%;height:200%}.mdc-ripple-surface.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface[data-mdc-ripple-is-unbounded]{overflow:visible}.mdc-ripple-surface[data-mdc-ripple-is-unbounded]::before,.mdc-ripple-surface[data-mdc-ripple-is-unbounded]::after{top:calc(50% - 50%);left:calc(50% - 50%);width:100%;height:100%}.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::before,.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after{top:var(--mdc-ripple-top, calc(50% - 50%));left:var(--mdc-ripple-left, calc(50% - 50%));width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface--primary::before,.mdc-ripple-surface--primary::after{background-color:#6200ee;background-color:var(--mdc-theme-primary, #6200ee)}.mdc-ripple-surface--primary:hover::before{opacity:.04}.mdc-ripple-surface--primary.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.12}.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.12}.mdc-ripple-surface--primary.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.12}.mdc-ripple-surface--accent::before,.mdc-ripple-surface--accent::after{background-color:#018786;background-color:var(--mdc-theme-secondary, #018786)}.mdc-ripple-surface--accent:hover::before{opacity:.04}.mdc-ripple-surface--accent.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.12}.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.12}.mdc-ripple-surface--accent.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.12}.mdc-ripple-surface{pointer-events:none;position:absolute;top:0;right:0;bottom:0;left:0}`;\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {customElement} from 'lit-element';\n\nimport {RippleBase} from './mwc-ripple-base.js';\nimport {style} from './mwc-ripple-css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-ripple': Ripple;\n  }\n}\n\n@customElement('mwc-ripple')\nexport class Ripple extends RippleBase {\n  static styles = style;\n}\n"],"sourceRoot":""}