{"version":3,"sources":["app/trainModel/ModelTableHead.js","app/trainModel/ModelTableToolbar.js","app/trainModel/ModelTableRow.js","app/trainModel/actions/trainModel.actions.js","app/trainModel/reducers/trainModel.reducer.js","app/trainModel/reducers/index.js","app/trainModel/ModelTableContainer.js","app/trainModel/NluModelList.js"],"names":["headRows","id","numeric","disablePadding","label","disabledPadding","ModelTableHead","props","console","log","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","row","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColot","lighten","light","text","primary","backgroundColor","dark","spacer","flex","actions","justifyContent","title","ModelTableToolbar","classes","onRefresh","onActive","Toolbar","className","clsx","Typography","variant","Tooltip","IconButton","aria-label","ModelTableRow","getModelList","project_id","params","queryString","Object","keys","join","axios","get","GET_MODEL_LIST_URL","initialState","selectedModel","modelTableApp","state","action","reducer","combineReducers","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","desc","a","b","getDateTime","unix_timestamp","date","Date","year","getFullYear","month","getMonth","day","getDate","dateFormat","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substr","withReducer","useState","rows","setRows","setLoading","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","useEffect","limit","offset","response","data","fetchData","refreshList","e","trained_at","emptyRows","Math","min","length","activeModel","model_nm","put","Paper","Table","aria-labelledby","size","target","newSelected","n","model","TableBody","array","cmp","stablizedThis","el","index","sort","stableSort","getSorting","slice","isItemSelected","indexOf","labelId","animation","duration","delay","hover","selectedIndex","concat","handleClick","role","aria-checked","tabIndex","component","scope","tags","style","height","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","value","FormControlLabel","control","Switch","NluModelList"],"mappings":"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","file":"static/js/11.59e01615.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  TableHead,\n  TableRow,\n  Checkbox,\n  TableCell,\n  TableSortLabel\n} from \"@material-ui/core\";\n\nconst headRows = [\n  {\n    id: \"model\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Model명\"\n  },\n  {\n    id: \"trained_at\",\n    numeric: true,\n    disabledPadding: true,\n    label: \"Model 학습 일시\"\n  },\n  {\n    id: \"state\",\n    numeric: true,\n    disabledPadding: true,\n    label: \"Model 상태\"\n  }\n];\nconst ModelTableHead = props => {\n  console.log(\"ModelTableHead\", props);\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"모델 전체 선택\" }}\n          />\n        </TableCell>\n        {headRows.map(row => (\n          <TableCell\n            key={row.id}\n            align={row.numeric ? \"center\" : \"right\"}\n            padding={row.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === row.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === row.id}\n              direction={order}\n              onClick={createSortHandler(row.id)}\n            >\n              {row.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default ModelTableHead;\n","import React from \"react\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport { Toolbar, Typography, IconButton, Tooltip } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoubleArrow from \"@material-ui/icons/DoubleArrow\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColot: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.primary.dark\n        },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n\n  actions: {\n    flex: \"0 0 auto\",\n    justifyContent: \"flex-end\",\n    color: theme.palette.text.primary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n}));\n\nconst refreshClick = () => {\n  console.log(\"Refresh Clicked\");\n};\n\nconst removeClick = () => {\n  console.log(\"Remove Clicked\");\n};\n\nconst activeClick = () => {\n  console.log(\"Active Clicked\");\n};\nconst ModelTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected, onRefresh, onActive } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} 개 모델이 선택되었습니다\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            학습 Model 리스트\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          numSelected === 1 ? (\n            <>\n              <Tooltip title=\"모델 활성화\">\n                <IconButton aria-label=\"Active Model\" onClick={onActive}>\n                  <DoubleArrow />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"모델 삭제\">\n                <IconButton aria-label=\"Delete\">\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          ) : (\n            <>\n              <Tooltip title=\"모델 삭제\">\n                <IconButton aria-label=\"Delete\">\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          )\n        ) : (\n          <Tooltip title=\"재조회\">\n            <IconButton aria-label=\"Refresh\" onClick={onRefresh}>\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nexport default ModelTableToolbar;\n","import React from \"react\";\nimport { TableBody, TableRow, TableCell } from \"@material-ui/core\";\nfunction ModelTableRow() {\n  return \"ddd\";\n  // <TableBody>\n  //   {stableSort(rows, getSorting(order, orderBy))\n  //     .slice(page * rowsPerPage, page * rowsPerPage + rowPerPage)\n  //     .map((row, index) => {\n  //       const isItemSelected = isSelected(row.model);\n  //       const labelId = `model-table-checkbox-${index}`;\n\n  //       return (\n  //         <TableRow\n  //           hover\n  //           onClick={event => handleClick(event, row.model)}\n  //           role=\"checkbox\"\n  //           aria-checked={isItemSelected}\n  //           tabIndex={-1}\n  //           key={row.model}\n  //           selected={isItemSelected}\n  //         ></TableRow>\n  //       );\n  //     })}\n  //   <TableRow>\n  //     <TableCell>Test</TableCell>\n  //   </TableRow>\n  // </TableBody>;\n}\n\nexport default ModelTableRow;\n","import axios from \"axios\";\n\nexport const GET_MODEL_LIST_URL = \"/api/projects\";\n\nexport const GET_MODEL_LIST = \"[MODEL APP]GET MODEL LIST\";\n\nexport function getModelList(project_id, params) {\n  var queryString = Object.keys(params)\n    .map(function(key) {\n      return key + \"=\" + params[key];\n    })\n    .join(\"&\");\n\n  return axios.get(\n    GET_MODEL_LIST_URL + \"/\" + project_id + \"/\" + \"models\" + \"?\" + queryString\n  );\n}\n\nexport function activeModel(project_id, model_nm) {\n  return axios.put(\n    GET_MODEL_LIST_URL +\n      \"/\" +\n      project_id +\n      \"/\" +\n      \"models\" +\n      \"/\" +\n      model_nm +\n      \"/tags/\" +\n      \"production\"\n  );\n}\n","import * as Actions from \"../actions\";\n\nconst initialState = {\n  selectedModel: {}\n};\n\nconst modelTableApp = function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default modelTableApp;\n","import { combineReducers } from \"redux\";\nimport modelTableApp from \"./trainModel.reducer\";\n\nconst reducer = combineReducers({\n  modelTableApp\n});\n\nexport default reducer;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ModelTableHead from \"./ModelTableHead\";\nimport ModelTableToolbar from \"./ModelTableToolbar\";\nimport ModelTableRow from \"./ModelTableRow\";\nimport {\n  makeStyles,\n  lighten,\n  withStyles,\n  useTheme\n} from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TablePagination,\n  Switch,\n  FormControlLabel,\n  Tooltip,\n  IconButton\n} from \"@material-ui/core\";\nimport DoubleArrow from \"@material-ui/icons/DoubleArrow\";\nimport { getModelList } from \"./actions/trainModel.actions\";\nimport { FuseScrollbars, FuseAnimate } from \"@fuse\";\nimport reducer from \"./reducers\";\nimport * as Actions from \"./actions\";\nimport withReducer from \"app/store/withReducer\";\n\n// import { select } from \"@redux-saga/core/effects\";\n\n// Mock Data\n// const rows = [\n//   {\n//     hash: \"92a343ef22d7cad589e436a15b483f49\",\n//     model: \"20191118-151001\",\n//     path: \"models\\\\20191118-151001.tar.gz\",\n//     project: \"default\",\n//     trained_at: 1574057322.1120133,\n//     version: \"1.4.5\",\n//     tags: [\"production\"],\n//     is_compatible: true\n//   },\n//   {\n//     hash: \"8d72d4d55b0a14872a56083914b3a79f\",\n//     model: \"20191115-165137\",\n//     path: \"models\\\\20191115-165137.tar.gz\",\n//     project: \"default\",\n//     trained_at: 1573804188.7523906,\n//     version: \"1.4.5\",\n//     tags: [],\n//     is_compatible: true\n//   }\n// ];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  }\n}));\n\n//Table Util Function\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\nfunction stableSort(array, cmp) {\n  const stablizedThis = array.map((el, index) => [el, index]);\n  stablizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stablizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction getDateTime(unix_timestamp) {\n  var date = new Date(unix_timestamp * 1000);\n\n  var year = date.getFullYear(); //yyyy\n  var month = 1 + date.getMonth(); //M\n  month = month >= 10 ? month : \"0\" + month; //month 두자리로 저장\n  var day = date.getDate(); //d\n  day = day >= 10 ? day : \"0\" + day; //day 두자리로 저장\n  var dateFormat = year + \"-\" + month + \"-\" + day;\n\n  // Hours part from the timestamp\n  var hours = date.getHours();\n  // Minutes part from the timestamp\n  var minutes = \"0\" + date.getMinutes();\n  // Seconds part from the timestamp\n  var seconds = \"0\" + date.getSeconds();\n\n  // Will display time in 10:30:23 format\n  var formattedTime =\n    hours + \":\" + minutes.substr(-2) + \":\" + seconds.substr(-2);\n  console.log(dateFormat);\n  console.log(formattedTime);\n\n  return dateFormat + \" \" + formattedTime;\n}\n\nfunction ModelTableContainer() {\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"model\");\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await getModelList(\"default\", {\n          limit: page * rowsPerPage === 0 ? rowsPerPage : page * rowsPerPage,\n          offset: page\n        });\n        console.log(response);\n        setRows(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n\n      setLoading(false);\n    };\n    fetchData();\n  }, [page, rowsPerPage]);\n\n  const refreshList = async e => {\n    console.log(\"refreshList\", e);\n    setLoading(true);\n    try {\n      const response = await getModelList(\"default\", {\n        limit: page * rowsPerPage === 0 ? rowsPerPage : page * rowsPerPage,\n        offset: page\n      });\n      console.log(response);\n      const unix_timestamp = response.data[0].trained_at;\n      getDateTime(unix_timestamp);\n      setRows(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n\n    setLoading(false);\n  };\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelected = rows.map(n => n.model);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  }\n\n  function handleClick(event, model) {\n    console.log(\"handleClick\", event, model);\n    const selectedIndex = selected.indexOf(model);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, model);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  const isSelected = model => selected.indexOf(model) !== -1;\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  const classes = useStyles();\n\n  const statusHover = () => {\n    console.log(\"status Hover\");\n  };\n\n  const activeModel = async () => {\n    console.log(\"active model process\");\n    console.log(\"selected model\", selected);\n    if (selected.length > 0) {\n      const response = await Actions.activeModel(\"default\", selected[0]);\n      console.log(response);\n\n      refreshList(null);\n    }\n  };\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"kt-section\">\n            <span className=\"kt-section__sub\">\n              <strong>\n                NLU 학습 <code>Model</code> 관리\n              </strong>\n            </span>\n          </div>\n\n          <div className=\"kt-section__content\">\n            <Paper className={classes.root}>\n              <ModelTableToolbar\n                numSelected={selected.length}\n                onRefresh={refreshList}\n                onActive={activeModel}\n              />\n              <div className={classes.tableWrapper}>\n                <Table\n                  className={classes.table}\n                  aria-labelledby=\"tableTitle\"\n                  size={dense ? \"small\" : \"medium\"}\n                >\n                  <ModelTableHead\n                    numSelected={selected.length}\n                    order={order}\n                    orderBy={orderBy}\n                    onSelectAllClick={handleSelectAllClick}\n                    onRequestSort={handleRequestSort}\n                    rowCount={rows.length}\n                  />\n                  <TableBody>\n                    {stableSort(rows, getSorting(order, orderBy))\n                      .slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage\n                      )\n                      .map((row, index) => {\n                        console.log(\"row\", row);\n                        console.log(\"row\", row.model);\n                        const isItemSelected = isSelected(row.model);\n                        const labelId = `mnodel-table-checkbox-${index}`;\n\n                        return (\n                          <FuseAnimate\n                            animation=\"transition.fadeIn\"\n                            duration={400}\n                            delay={100}\n                            key={row.model}\n                          >\n                            <TableRow\n                              hover\n                              onClick={event => handleClick(event, row.model)}\n                              role=\"checkbox\"\n                              aria-checked={isItemSelected}\n                              tabIndex={-1}\n                              key={row.model}\n                              selected={isItemSelected}\n                            >\n                              <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                  checked={isItemSelected}\n                                  inputProps={{\n                                    \"aria-labelledby\": labelId\n                                  }}\n                                />\n                              </TableCell>\n                              <TableCell\n                                align=\"center\"\n                                component=\"th\"\n                                id={labelId}\n                                scope=\"row\"\n                                padding=\"none\"\n                              >\n                                {row.model}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {getDateTime(row.trained_at)}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {/* <Tooltip title=\"모델 활성화\">\n                                    <IconButton aria-label=\"Active Model\">\n                                      <DoubleArrow />\n                                    </IconButton>\n                                  </Tooltip> */}\n                                {row.tags}\n                              </TableCell>\n                            </TableRow>\n                          </FuseAnimate>\n                        );\n                      })}\n                    {emptyRows > 0 && (\n                      <TableRow style={{ height: 49 * emptyRows }}>\n                        <TableCell colSpan={4} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </div>\n              <TablePagination\n                rowsPerPageOptions={[1, 5, 10, 25, 50]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                backIconButtonProps={{\n                  \"aria-label\": \"이전 페이지\"\n                }}\n                nextIconButtonProps={{\n                  \"aria-label\": \"다음 페이지\"\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </Paper>\n            <FormControlLabel\n              control={<Switch checked={dense} onChange={handleChangeDense} />}\n              label=\"간격 줄이기\"\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default withReducer(\"ModelTableApp\", reducer)(ModelTableContainer);\n","import React from \"react\";\nimport ModelTableContainer from \"./ModelTableContainer\";\n\nfunction NluModelList() {\n  return <ModelTableContainer />;\n}\n\nexport default NluModelList;\n"],"sourceRoot":""}