{"version":3,"sources":["webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-navigation.ts","webpack:///./src/common/datetime/seconds_to_duration.ts","webpack:///./src/common/entity/timer_time_remaining.ts","webpack:///./src/common/datetime/duration_to_seconds.ts","webpack:///./src/panels/config/ais_dom/ais-webhooks.ts","webpack:///./src/panels/config/ais_dom/dialog-manage-ais-cloudhook/show-dialog-manage-ais-cloudhook.ts","webpack:///./src/panels/config/ais_dom/ais-timer.js","webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-config-remote.js"],"names":["PAGES","page","caption","description","customElement","_LitElement","[object Object]","args","super","_initialize","this","property","html","map","css","LitElement","__webpack_require__","d","__webpack_exports__","secondsToDuration","leftPad","num","h","Math","floor","m","s","timerTimeRemaining","stateObj","timeRemaining","duration","parts","split","Number","durationToSeconds","attributes","remaining","state","now","Date","getTime","madeActive","last_changed","max","AisWebhooks","_decorate","constructor","F","kind","decorators","key","value","static","hass","_localHooks","_get","_getPrototypeOf","prototype","call","_fetchData","renderStyle","_renderBody","length","entry","webhook_id","name","domain","toLowerCase","_handleManageButton","webhookId","webhook","find","ent","element","webhookDialogParams","fireEvent","dialogTag","dialogImport","Promise","all","e","then","bind","dialogParams","ev","currentTarget","parentElement","_showDialog","async","fetchWebhooks","customElements","define","PolymerElement","template","properties","Object","type","observer","inDialog","Boolean","connectedCallback","startInterval","disconnectedCallback","clearInterval","stateObjChanged","_updateRemaining","calculateRemaining","setInterval","_secondsToDuration","time","isWide","showAdvanced","remoteInfo","String","remoteDomain","computed","remoteConnected","gatePinPairingInfo","gatePin","gatePinPairing","_computeRemoteDomain","states","_computeStateObj","_computeGatePinPairing","_computeRremoteConnected","changeRemote","callService","entity_id","enableGatePariringByPin"],"mappings":"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","file":"chunk.5d2bed1fc3ef75d51172.js","sourcesContent":["import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst PAGES: Array<{\n  page: string;\n  caption: string;\n  description: string;\n}> = [\n  {\n    page: \"ais_dom_config_update\",\n    caption: \"Oprogramowanie bramki\",\n    description:\n      \"Aktualizacja systemu i synchronizacja bramki z Portalem Integratora\",\n  },\n  {\n    page: \"ais_dom_config_wifi\",\n    caption: \"Sieć WiFi\",\n    description: \"Ustawienia połączenia z siecią WiFi\",\n  },\n  {\n    page: \"ais_dom_config_display\",\n    caption: \"Ekran\",\n    description: \"Ustawienia ekranu\",\n  },\n  {\n    page: \"ais_dom_config_tts\",\n    caption: \"Głos asystenta\",\n    description: \"Ustawienia głosu asystenta\",\n  },\n  {\n    page: \"ais_dom_config_night\",\n    caption: \"Tryb nocny\",\n    description: \"Ustawienie godzin, w których asystent ma działać ciszej\",\n  },\n  {\n    page: \"ais_dom_config_remote\",\n    caption: \"Zdalny dostęp\",\n    description: \"Konfiguracja zdalnego dostępu do bramki\",\n  },\n  {\n    page: \"ais_dom_config_power\",\n    caption: \"Zatrzymanie bramki\",\n    description: \"Restart lub wyłączenie bramki\",\n  },\n];\n\n@customElement(\"ha-config-ais-dom-navigation\")\nclass HaConfigNavigation extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <ha-card>\n        ${PAGES.map(\n          ({ page, caption, description }) =>\n            html`\n              <a href=${`/config/${page}`}>\n                <paper-item>\n                  <paper-item-body two-line=\"\"\n                    >${`${caption}`}\n                    <div secondary>${`${description}`}</div>\n                  </paper-item-body>\n                  <ha-icon-next></ha-icon-next>\n                </paper-item>\n              </a>\n            `\n        )}\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-ais-dom-navigation\": HaConfigNavigation;\n  }\n}\n","const leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport default function secondsToDuration(d: number) {\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return \"\" + s;\n  }\n  return null;\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport durationToSeconds from \"../datetime/duration_to_seconds\";\n\nexport const timerTimeRemaining = (stateObj: HassEntity) => {\n  let timeRemaining = durationToSeconds(stateObj.attributes.remaining);\n\n  if (stateObj.state === \"active\") {\n    const now = new Date().getTime();\n    const madeActive = new Date(stateObj.last_changed).getTime();\n    timeRemaining = Math.max(timeRemaining - (now - madeActive) / 1000, 0);\n  }\n\n  return timeRemaining;\n};\n","export default function durationToSeconds(duration: string): number {\n  const parts = duration.split(\":\").map(Number);\n  return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\n","import { html, LitElement, PropertyDeclarations, property } from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../../components/ha-card\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { Webhook, fetchWebhooks } from \"../../../data/webhook\";\n\nimport { showManageCloudhookDialog } from \"./dialog-manage-ais-cloudhook/show-dialog-manage-ais-cloudhook\";\n\nexport class AisWebhooks extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() private _localHooks?: Webhook[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _localHooks: {},\n    };\n  }\n\n  constructor() {\n    super();\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._fetchData();\n  }\n\n  protected render() {\n    return html`\n      ${this.renderStyle()}\n      <ha-card header=\"Wywołania zwrotne HTTP\">\n        <div class=\"card-content\">\n          Wywołania zwrotne HTTP (Webhook) używane są do udostępniania\n          powiadomień o zdarzeniach. Wszystko, co jest skonfigurowane do\n          uruchamiania przez wywołanie zwrotne, ma publicznie dostępny unikalny\n          adres URL, aby umożliwić wysyłanie danych do Asystenta domowego z\n          dowolnego miejsca. ${this._renderBody()}\n\n          <div class=\"footer\">\n            <a href=\"https://www.ai-speaker.com/\" target=\"_blank\">\n              Dowiedz się więcej o zwrotnym wywołaniu HTTP.\n            </a>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _renderBody() {\n    if (!this._localHooks) {\n      return html`\n        <div class=\"body-text\">Pobieranie…</div>\n      `;\n    }\n\n    if (this._localHooks.length === 1) {\n      return html`\n        <div class=\"body-text\">\n          Wygląda na to, że nie masz jeszcze zdefiniowanych żadnych wywołań\n          zwrotnych. Rozpocznij od skonfigurowania\n          <a href=\"/config/integrations\">\n            integracji opartej na wywołaniu zwrotnym\n          </a>\n          lub przez tworzenie\n          <a href=\"/config/automation/new\"> automatyzacji typu webhook </a>.\n        </div>\n      `;\n    }\n\n    return this._localHooks.map(\n      (entry) => html`\n        ${entry.webhook_id === \"aisdomprocesscommandfromframe\"\n          ? html`\n              <div></div>\n            `\n          : html`\n              <div class=\"webhook\" .entry=\"${entry}\">\n                <paper-item-body two-line>\n                  <div>\n                    ${entry.name}\n                    ${entry.domain === entry.name.toLowerCase()\n                      ? \"\"\n                      : ` (${entry.domain})`}\n                  </div>\n                  <div secondary>${entry.webhook_id}</div>\n                </paper-item-body>\n                <mwc-button @click=\"${this._handleManageButton}\">\n                  Pokaż\n                </mwc-button>\n              </div>\n            `}\n      `\n    );\n  }\n\n  private _showDialog(webhookId: string) {\n    const webhook = this._localHooks!.find(\n      (ent) => ent.webhook_id === webhookId\n    )!;\n    showManageCloudhookDialog(this, { webhook });\n  }\n\n  private _handleManageButton(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry as Webhook;\n    this._showDialog(entry.webhook_id);\n  }\n\n  private async _fetchData() {\n    this._localHooks = await fetchWebhooks(this.hass!);\n  }\n\n  private renderStyle() {\n    return html`\n      <style>\n        .body-text {\n          padding: 8px 0;\n        }\n        .webhook {\n          display: flex;\n          padding: 4px 0;\n        }\n        .progress {\n          margin-right: 16px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .footer {\n          padding-top: 16px;\n        }\n        .body-text a,\n        .footer a {\n          color: var(--primary-color);\n        }\n      </style>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ais-webhooks\": AisWebhooks;\n  }\n}\n\ncustomElements.define(\"ais-webhooks\", AisWebhooks);\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { Webhook } from \"../../../../data/webhook\";\n\nexport interface WebhookDialogParams {\n  webhook: Webhook;\n}\n\nexport const showManageCloudhookDialog = (\n  element: HTMLElement,\n  webhookDialogParams: WebhookDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-manage-ais-cloudhook\",\n    dialogImport: () =>\n      import(/* webpackChunkName: \"ais-webhook-manage-dialog\" */ \"./dialog-manage-ais-cloudhook\"),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../components/entity/state-info\";\n\nimport { timerTimeRemaining } from \"../../../common/entity/timer_time_remaining\";\nimport secondsToDuration from \"../../../common/datetime/seconds_to_duration\";\n\nclass AisTimer extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-flex-alignment\"></style>\n\n      [[_secondsToDuration(timeRemaining)]]\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: {\n        type: Object,\n        observer: \"stateObjChanged\",\n      },\n      timeRemaining: Number,\n      inDialog: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.startInterval(this.stateObj);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.clearInterval();\n  }\n\n  stateObjChanged(stateObj) {\n    this.startInterval(stateObj);\n  }\n\n  clearInterval() {\n    if (this._updateRemaining) {\n      clearInterval(this._updateRemaining);\n      this._updateRemaining = null;\n    }\n  }\n\n  startInterval(stateObj) {\n    this.clearInterval();\n    this.calculateRemaining(stateObj);\n\n    if (stateObj.state === \"active\") {\n      this._updateRemaining = setInterval(\n        () => this.calculateRemaining(this.stateObj),\n        1000\n      );\n    }\n  }\n\n  calculateRemaining(stateObj) {\n    this.timeRemaining = timerTimeRemaining(stateObj);\n  }\n\n  _secondsToDuration(time) {\n    return secondsToDuration(time);\n  }\n}\ncustomElements.define(\"ais-timer\", AisTimer);\n","import \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../resources/ha-style\";\n\nimport \"./ha-config-ais-dom-navigation\";\nimport \"./ais-webhooks\";\nimport \"../../../components/ha-switch\";\nimport \"./ais-timer\";\n/*\n *\n */\nclass HaConfigAisDomControl extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 32px;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        span.pin {\n          color: var(--primary-color);\n          font-size: 2em;\n        }\n        .border {\n          margin-bottom: 12px;\n          border-bottom: 2px solid rgba(0, 0, 0, 0.11);\n          max-width: 1040px;\n        }\n        .narrow .border {\n          max-width: 640px;\n        }\n        .center-container {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          height: 70px;\n        }\n        ha-card > div#ha-switch-id {\n          margin: -4px 0;\n          position: absolute;\n          right: 8px;\n          top: 32px;\n        }\n        .card-actions a {\n          text-decoration: none;\n        }\n      </style>\n\n      <hass-subpage header=\"Konfiguracja bramki AIS dom\">\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">Zdalny dostęp</span>\n            <span slot=\"introduction\"\n              >W tej sekcji możesz skonfigurować zdalny dostęp do bramki</span\n            >\n            <ha-card header=\"Szyfrowany tunel\">\n              <div id=\"ha-switch-id\">\n                <ha-switch\n                  checked=\"{{remoteConnected}}\"\n                  on-change=\"changeRemote\"\n                ></ha-switch>\n              </div>\n              <div class=\"card-content\">\n                Tunel zapewnia bezpieczne zdalne połączenie z Twoim urządzeniem\n                kiedy jesteś z dala od domu. Twoja bramka dostępna\n                [[remoteInfo]] z Internetu pod adresem\n                <a href=\"[[remoteDomain]]\" target=\"_blank\">[[remoteDomain]]</a>.\n                <div class=\"center-container border\" style=\"height: 320px;\">\n                  <div style=\"text-align: center; margin-top: 10px;\">\n                    <img src=\"/local/dom_access_code.png\" />\n                  </div>\n                  Zeskanuj kod QR za pomocą aplikacji na telefonie.\n                </div>\n              </div>\n              <div class=\"card-content\" style=\"text-align:center;\">\n                <svg style=\"width:48px;height:48px\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"#929395\"\n                    d=\"M1,11H6L3.5,8.5L4.92,7.08L9.84,12L4.92,16.92L3.5,15.5L6,13H1V11M8,0H16L16.83,5H17A2,2 0 0,1 19,7V17C19,18.11 18.1,19 17,19H16.83L16,24H8L7.17,19H7C6.46,19 6,18.79 5.62,18.44L7.06,17H17V7H7.06L5.62,5.56C6,5.21 6.46,5 7,5H7.17L8,0Z\"\n                  />\n                </svg>\n                <br />\n                <template is=\"dom-if\" if=\"[[!gatePinPairing]]\">\n                  [[gatePinPairingInfo]]\n                  <br />\n                  <mwc-button on-click=\"enableGatePariringByPin\"\n                    >Generuj kod PIN</mwc-button\n                  >\n                </template>\n                <template is=\"dom-if\" if=\"[[gatePinPairing]]\">\n                  <span class=\"pin\">[[gatePin]]</span><br />\n                  [[gatePinPairingInfo]]\n                  <template is=\"dom-if\" if=\"[[stateObj]]\">\n                    <ais-timer\n                      hass=\"[[hass]]\"\n                      state-obj=\"[[stateObj]]\"\n                      in-dialog\n                    ></ais-timer>\n                  </template>\n                </template>\n              </div>\n              <div class=\"card-actions\">\n                <a\n                  href=\"https://www.ai-speaker.com/docs/ais_bramka_remote_www_index\"\n                  target=\"_blank\"\n                >\n                  <mwc-button>Dowiedz się jak to działa</mwc-button>\n                </a>\n              </div>\n            </ha-card>\n\n            <ais-webhooks hass=\"[[hass]]\"></ais-webhooks>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      showAdvanced: Boolean,\n      remoteInfo: {\n        type: String,\n        value: \"jest\",\n      },\n\n      remoteDomain: {\n        type: String,\n        computed: \"_computeRemoteDomain(hass)\",\n      },\n\n      remoteConnected: {\n        type: Boolean,\n        computed: \"_computeRremoteConnected(hass)\",\n      },\n\n      gatePinPairingInfo: {\n        type: String,\n      },\n\n      gatePin: {\n        type: String,\n      },\n\n      gatePinPairing: {\n        type: Boolean,\n        computed: \"_computeGatePinPairing(hass)\",\n      },\n\n      stateObj: {\n        type: Object,\n        computed: \"_computeStateObj(hass)\",\n      },\n    };\n  }\n\n  _computeRemoteDomain(hass) {\n    return (\n      \"https://\" +\n      hass.states[\"sensor.ais_secure_android_id_dom\"].state +\n      \".paczka.pro\"\n    );\n  }\n\n  _computeStateObj(hass) {\n    return hass.states[\"timer.ais_dom_pin_join\"];\n  }\n\n  _computeGatePinPairing(hass) {\n    if (hass.states[\"timer.ais_dom_pin_join\"].state === \"active\") {\n      this.gatePin = hass.states[\"sensor.gate_pairing_pin\"].state;\n      this.gatePinPairingInfo = \"PIN aktywny przez dwie munuty:\";\n      return true;\n    }\n\n    this.gatePin = \"\";\n    this.gatePinPairingInfo = \"Włącz parowanie z bramką za pomocą PIN\";\n    return false;\n  }\n\n  _computeRremoteConnected(hass) {\n    if (hass.states[\"input_boolean.ais_remote_access\"].state === \"on\") {\n      this.remoteInfo = \"jest\";\n      return true;\n    }\n    this.remoteInfo = \"będzie\";\n    return false;\n  }\n\n  changeRemote() {\n    this.hass.callService(\"input_boolean\", \"toggle\", {\n      entity_id: \"input_boolean.ais_remote_access\",\n    });\n  }\n\n  enableGatePariringByPin() {\n    this.hass.callService(\"ais_cloud\", \"enable_gate_pairing_by_pin\");\n  }\n}\n\ncustomElements.define(\"ha-config-ais-dom-config-remote\", HaConfigAisDomControl);\n"],"sourceRoot":""}