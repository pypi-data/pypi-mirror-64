# Generated by Django 3.0.2 on 2020-02-26 15:33

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('collection', '0003_auto_20200225_1741'),
    ]

    operations = [
        migrations.CreateModel(
            name='CModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.TextField(null=True, verbose_name='数据来源')),
                ('download_time', models.DateTimeField(auto_now=True, verbose_name='数据更新时间')),
                ('data_completion', models.FloatField(default=0, null=True, verbose_name='数据完整度')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='检查项名称')),
            ],
            options={
                'db_table': 'aid_check',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.TextField(null=True, verbose_name='数据来源')),
                ('download_time', models.DateTimeField(auto_now=True, verbose_name='数据更新时间')),
                ('data_completion', models.FloatField(default=0, null=True, verbose_name='数据完整度')),
                ('symptom', models.TextField(null=True, verbose_name='疾病症状')),
                ('cause', models.TextField(null=True, verbose_name='病因')),
            ],
            options={
                'db_table': 'aid_disease',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MRModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.TextField(null=True, verbose_name='数据来源')),
                ('download_time', models.DateTimeField(auto_now=True, verbose_name='数据更新时间')),
                ('data_completion', models.FloatField(default=0, null=True, verbose_name='数据完整度')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='药品名称')),
                ('related_id', models.TextField(null=True, verbose_name='相关药品ID')),
            ],
            options={
                'db_table': 'aid_medcine',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriptionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.TextField(null=True, verbose_name='数据来源')),
                ('download_time', models.DateTimeField(auto_now=True, verbose_name='数据更新时间')),
                ('data_completion', models.FloatField(default=0, null=True, verbose_name='数据完整度')),
                ('symptom', models.CharField(max_length=255, null=True, verbose_name='疾病症状')),
                ('check_up', models.CharField(max_length=255, null=True, verbose_name='辅助检查项')),
                ('medicines', models.TextField(null=True, verbose_name='治疗药品')),
            ],
            options={
                'db_table': 'aid_prescription',
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='prescriptionmodel',
            constraint=models.UniqueConstraint(fields=('symptom',), name='aid_prescription_unique'),
        ),
        migrations.AddConstraint(
            model_name='mrmodel',
            constraint=models.UniqueConstraint(fields=('name',), name='aid_medicine_required_unique'),
        ),
        migrations.AddConstraint(
            model_name='dmodel',
            constraint=models.UniqueConstraint(fields=('symptom', 'cause'), name='aid_diseases_unique'),
        ),
        migrations.AddConstraint(
            model_name='cmodel',
            constraint=models.UniqueConstraint(fields=('name',), name='aid_check_unique'),
        ),
    ]
