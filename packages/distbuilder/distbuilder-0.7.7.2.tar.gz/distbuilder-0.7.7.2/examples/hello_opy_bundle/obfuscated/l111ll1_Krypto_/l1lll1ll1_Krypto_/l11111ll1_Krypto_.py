# coding: utf-8
from sys import version_info as __1l111l_Krypto_
l1lll_Krypto_ = __1l111l_Krypto_[0] == 2
l1l11ll_Krypto_ = 2048
l1l11_Krypto_ = 7
def l1l1111_Krypto_ (l1ll1l1_Krypto_):
    global l1l1l11_Krypto_
    l1111_Krypto_ = ord (l1ll1l1_Krypto_ [-1])
    l11l_Krypto_ = l1ll1l1_Krypto_ [:-1]
    l1l1lll_Krypto_ = l1111_Krypto_ % len (l11l_Krypto_)
    l11ll1_Krypto_ = l11l_Krypto_ [:l1l1lll_Krypto_] + l11l_Krypto_ [l1l1lll_Krypto_:]
    if l1lll_Krypto_:
        l1l_Krypto_ = unicode () .join ([unichr (ord (char) - l1l11ll_Krypto_ - (l11l1_Krypto_ + l1111_Krypto_) % l1l11_Krypto_) for l11l1_Krypto_, char in enumerate (l11ll1_Krypto_)])
    else:
        l1l_Krypto_ = str () .join ([chr (ord (char) - l1l11ll_Krypto_ - (l11l1_Krypto_ + l1111_Krypto_) % l1l11_Krypto_) for l11l1_Krypto_, char in enumerate (l11ll1_Krypto_)])
    return eval (l1l_Krypto_)
l1l1111_Krypto_ (u"ࠦࠧࠨࡈࡎࡃࡆࠤ࠭ࡎࡡࡴࡪ࠰ࡦࡦࡹࡥࡥࠢࡐࡩࡸࡹࡡࡨࡧࠣࡅࡺࡺࡨࡦࡰࡷ࡭ࡨࡧࡴࡪࡱࡱࠤࡈࡵࡤࡦࠫࠣࡥࡱ࡭࡯ࡳ࡫ࡷ࡬ࡲࠐࠊࡉࡏࡄࡇࠥ࡯ࡳࠡࡣࠣࡑࡆࡉࠠࡥࡧࡩ࡭ࡳ࡫ࡤࠡ࡫ࡱࠤࡗࡌࡃ࠳࠳࠳࠸ࡤࠦࡡ࡯ࡦࠣࡊࡎࡖࡓ࠮࠳࠼࠼ࡤࠦࡡ࡯ࡦࠣࡧࡴࡴࡳࡵࡴࡸࡧࡹ࡫ࡤࠡࡷࡶ࡭ࡳ࡭ࠊࡢࠢࡦࡶࡾࡶࡴࡰࡩࡵࡥࡵ࡯ࡣࠡࡪࡤࡷ࡭ࠦࡡ࡭ࡩࡲࡶ࡮ࡺࡨ࡮࠰ࠍࡍࡹࠦࡩࡴࠢࡸࡷࡺࡧ࡬࡭ࡻࠣࡲࡦࡳࡥࡥࠢ࠭ࡌࡒࡇࡃ࠮࡚࠭࠰ࠥࡽࡨࡦࡴࡨࠤ࠯࡞ࠪࠡ࡫ࡶࠤࡹ࡮ࡥࠡࡪࡤࡷ࡭ࠦࡡ࡭ࡩࡲࡶ࡮ࡺࡨ࡮࠽ࠣࡪࡴࡸࠊࡪࡰࡶࡸࡦࡴࡣࡦࠢ࠭ࡌࡒࡇࡃ࠮ࡕࡋࡅ࠶࠰ࠠࡰࡴࠣ࠮ࡍࡓࡁࡄ࠯ࡐࡈ࠺࠰࠮ࠋࠌࡗ࡬ࡪࠦࡳࡵࡴࡨࡲ࡬ࡺࡨࠡࡱࡩࠤࡦࡴࠠࡉࡏࡄࡇࠥࡪࡥࡱࡧࡱࡨࡸࠦ࡯࡯࠼ࠍࠎࠥ࠳ࠠࡵࡪࡨࠤࡸࡺࡲࡦࡰࡪࡸ࡭ࠦ࡯ࡧࠢࡷ࡬ࡪࠦࡨࡢࡵ࡫ࠤࡦࡲࡧࡰࡴ࡬ࡸ࡭ࡳࠊࠡ࠯ࠣࡸ࡭࡫ࠠ࡭ࡧࡱ࡫ࡹ࡮ࠠࡢࡰࡧࠤࡪࡴࡴࡳࡱࡳࡽࠥࡵࡦࠡࡶ࡫ࡩࠥࡹࡥࡤࡴࡨࡸࠥࡱࡥࡺࠌࠍࡅࡳࠦࡥࡹࡣࡰࡴࡱ࡫ࠠࡰࡨࠣࡴࡴࡹࡳࡪࡤ࡯ࡩࠥࡻࡳࡢࡩࡨࠤ࡮ࡹࠠࡵࡪࡨࠤ࡫ࡵ࡬࡭ࡱࡺ࡭ࡳ࡭࠺ࠋࠌࠣࠤࠥࠦ࠾࠿ࡀࠣࡪࡷࡵ࡭ࠡࡅࡵࡽࡵࡺ࡯࠯ࡊࡤࡷ࡭ࠦࡩ࡮ࡲࡲࡶࡹࠦࡈࡎࡃࡆࠎࠥࠦࠠࠡࡀࡁࡂࠏࠦࠠࠡࠢࡁࡂࡃࠦࡳࡦࡥࡵࡩࡹࠦ࠽ࠡࡤࠪࡗࡼࡵࡲࡥࡨ࡬ࡷ࡭࠭ࠊࠡࠢࠣࠤࡃࡄ࠾ࠡࡪࠣࡁࠥࡎࡍࡂࡅ࠱ࡲࡪࡽࠨࡴࡧࡦࡶࡪࡺࠩࠋࠢࠣࠤࠥࡄ࠾࠿ࠢ࡫࠲ࡺࡶࡤࡢࡶࡨࠬࡧ࠭ࡈࡦ࡮࡯ࡳࠬ࠯ࠊࠡࠢࠣࠤࡃࡄ࠾ࠡࡲࡵ࡭ࡳࡺࠠࡩ࠰࡫ࡩࡽࡪࡩࡨࡧࡶࡸ࠭࠯ࠊࠋ࠰࠱ࠤࡤࡘࡆࡄ࠴࠴࠴࠹ࡀࠠࡩࡶࡷࡴ࠿࠵࠯ࡸࡹࡺ࠲࡮࡫ࡴࡧ࠰ࡲࡶ࡬࠵ࡲࡧࡥ࠲ࡶ࡫ࡩ࠲࠲࠲࠷࠲ࡹࡾࡴࠋ࠰࠱ࠤࡤࡌࡉࡑࡕ࠰࠵࠾࠾࠺ࠡࡪࡷࡸࡵࡀ࠯࠰ࡥࡶࡶࡨ࠴࡮ࡪࡵࡷ࠲࡬ࡵࡶ࠰ࡲࡸࡦࡱ࡯ࡣࡢࡶ࡬ࡳࡳࡹ࠯ࡧ࡫ࡳࡷ࠴࡬ࡩࡱࡵ࠴࠽࠽࠵ࡦࡪࡲࡶ࠱࠶࠿࠸ࡢ࠰ࡳࡨ࡫ࠐࠢࠣࠤ࢚")
__revision__ = l1l1111_Krypto_ (u"ࠧࠪࡉࡥ࢛ࠦࠥ")
__all__ = [l1l1111_Krypto_ (u"࠭࡮ࡦࡹࠪ࢜"), l1l1111_Krypto_ (u"ࠧࡥ࡫ࡪࡩࡸࡺ࡟ࡴ࡫ࡽࡩࠬ࢝"), l1l1111_Krypto_ (u"ࠨࡊࡐࡅࡈ࠭࢞") ]
from l111ll1_Krypto_.l1l111ll_Krypto_.l1ll1ll11_Krypto_ import l111111ll_Krypto_
from l111ll1_Krypto_.l1l111ll_Krypto_.l1l11ll1_Krypto_ import *
digest_size = None
class l11111ll1_Krypto_:
    l1l1111_Krypto_ (u"ࠤࠥࠦࡈࡲࡡࡴࡵࠣࡸ࡭ࡧࡴࠡ࡫ࡰࡴࡱ࡫࡭ࡦࡰࡷࡷࠥࡎࡍࡂࡅࠥࠦࠧ࢟")
    digest_size = None
    def __init__(self, key, msg = None, l1111111l_Krypto_ = None):
        l1l1111_Krypto_ (u"ࠥࠦࠧࡉࡲࡦࡣࡷࡩࠥࡧࠠ࡯ࡧࡺࠤࡍࡓࡁࡄࠢࡲࡦ࡯࡫ࡣࡵ࠰ࠍࠎࠥࠦࠠࠡࠢࠣࠤࠥࡀࡐࡢࡴࡤࡱࡪࡺࡥࡳࡵ࠽ࠎࠥࠦࠠࠡࠢࠣࠤࠥࠦࠠ࡬ࡧࡼࠤ࠿ࠦࡢࡺࡶࡨࠤࡸࡺࡲࡪࡰࡪࠎࠥࠦࠠࠡࠢࠣࠤࠥࠦࠠࠡࠢࡶࡩࡨࡸࡥࡵࠢ࡮ࡩࡾࠦࡦࡰࡴࠣࡸ࡭࡫ࠠࡎࡃࡆࠤࡴࡨࡪࡦࡥࡷ࠲ࠏࠦࠠࠡࠢࠣࠤࠥࠦࠠࠡࠢࠣࡍࡹࠦ࡭ࡶࡵࡷࠤࡧ࡫ࠠ࡭ࡱࡱ࡫ࠥ࡫࡮ࡰࡷࡪ࡬ࠥࡺ࡯ࠡ࡯ࡤࡸࡨ࡮ࠠࡵࡪࡨࠤࡪࡾࡰࡦࡥࡷࡩࡩࠦࡳࡦࡥࡸࡶ࡮ࡺࡹࠡ࡮ࡨࡺࡪࡲࠠࡰࡨࠣࡸ࡭࡫ࠊࠡࠢࠣࠤࠥࠦࠠࠡࠢࠣࠤࠥࡓࡁࡄ࠰ࠣࡌࡴࡽࡥࡷࡧࡵ࠰ࠥࡺࡨࡦࡴࡨࠤ࡮ࡹࠠ࡯ࡱࠣࡦࡪࡴࡥࡧ࡫ࡷࠤ࡮ࡴࠠࡶࡵ࡬ࡲ࡬ࠦ࡫ࡦࡻࡶࠤࡱࡵ࡮ࡨࡧࡵࠤࡹ࡮ࡡ࡯ࠢࡷ࡬ࡪࠐࠠࠡࠢࠣࠤࠥࠦࠠࠡࠢࠣࠤࡥࡪࡩࡨࡧࡶࡸࡤࡹࡩࡻࡧࡣࠤࡴ࡬ࠠࡵࡪࡨࠤࡺࡴࡤࡦࡴ࡯ࡽ࡮ࡴࡧࠡࡪࡤࡷ࡭ࠦࡡ࡭ࡩࡲࡶ࡮ࡺࡨ࡮࠰ࠍࠤࠥࠦࠠࠡࠢࠣࠤࠥࠦ࡭ࡴࡩࠣ࠾ࠥࡨࡹࡵࡧࠣࡷࡹࡸࡩ࡯ࡩࠍࠤࠥࠦࠠࠡࠢࠣࠤࠥࠦࠠࠡࡖ࡫ࡩࠥࡼࡥࡳࡻࠣࡪ࡮ࡸࡳࡵࠢࡦ࡬ࡺࡴ࡫ࠡࡱࡩࠤࡹ࡮ࡥࠡ࡯ࡨࡷࡸࡧࡧࡦࠢࡷࡳࠥࡧࡵࡵࡪࡨࡲࡹ࡯ࡣࡢࡶࡨ࠲ࠏࠦࠠࠡࠢࠣࠤࠥࠦࠠࠡࠢࠣࡍࡹࠦࡩࡴࠢࡨࡵࡺ࡯ࡶࡢ࡮ࡨࡲࡹࠦࡴࡰࠢࡤࡲࠥ࡫ࡡࡳ࡮ࡼࠤࡨࡧ࡬࡭ࠢࡷࡳࠥࡦࡵࡱࡦࡤࡸࡪ࠮ࠩࡡ࠰ࠣࡓࡵࡺࡩࡰࡰࡤࡰ࠳ࠐࠠࠡࠢࠣࠤࠥࠦࠠ࠻ࡒࡤࡶࡦࡳࡥࡵࡧࡵࠤࡩ࡯ࡧࡦࡵࡷࡱࡴࡪ࠺ࠋࠢࠣࠤࠥࠦࠠࠡࠢࠣࠤࠥࠦࡔࡩࡧࠣ࡬ࡦࡹࡨࠡࡣ࡯࡫ࡴࡸࡩࡵࡪࡰࠤࡹ࡮ࡥࠡࡊࡐࡅࡈࠦࡩࡴࠢࡥࡥࡸ࡫ࡤࠡࡱࡱ࠲ࠏࠦࠠࠡࠢࠣࠤࠥࠦࠠࠡࠢࠣࡈࡪ࡬ࡡࡶ࡮ࡷࠤ࡮ࡹࠠࡡࡅࡵࡽࡵࡺ࡯࠯ࡊࡤࡷ࡭࠴ࡍࡅ࠷ࡣ࠲ࠏࠦࠠࠡࠢࠣࠤࠥࠦ࠺ࡕࡻࡳࡩࠥࡪࡩࡨࡧࡶࡸࡲࡵࡤ࠻ࠌࠣࠤࠥࠦࠠࠡࠢࠣࠤࠥࠦࠠࡂࠢ࡫ࡥࡸ࡮ࠠ࡮ࡱࡧࡹࡱ࡫ࠠࡰࡴࠣࡳࡧࡰࡥࡤࡶࠣ࡭ࡳࡹࡴࡢࡰࡷ࡭ࡦࡺࡥࡥࠢࡩࡶࡴࡳࠠࡡࡅࡵࡽࡵࡺ࡯࠯ࡊࡤࡷ࡭ࡦࠊࠡࠢࠣࠤࠥࠦࠠࠡࠤࠥࠦࢠ")
        if l1111111l_Krypto_ is None:
            from . import l1llllllll_Krypto_
            l1111111l_Krypto_ = l1llllllll_Krypto_
        self.l1111111l_Krypto_ = l1111111l_Krypto_
        self.l11111111_Krypto_ = l1111111l_Krypto_.new()
        self.inner = l1111111l_Krypto_.new()
        try:
            self.digest_size = l1111111l_Krypto_.digest_size
        except AttributeError:
            self.digest_size = len(self.l11111111_Krypto_.digest())
        try:
            blocksize = l1111111l_Krypto_.block_size
        except AttributeError:
            blocksize = 64
        l11111l1l_Krypto_ = 0x36
        l111111l1_Krypto_ = 0x5C
        if len(key) > blocksize:
            key = l1111111l_Krypto_.new(key).digest()
        key = key + l11111l11_Krypto_(0) * (blocksize - len(key))
        self.l11111111_Krypto_.update(l111111ll_Krypto_(key, l111111l1_Krypto_))
        self.inner.update(l111111ll_Krypto_(key, l11111l1l_Krypto_))
        if (msg):
            self.update(msg)
    def update(self, msg):
        l1l1111_Krypto_ (u"ࠦࠧࠨࡃࡰࡰࡷ࡭ࡳࡻࡥࠡࡣࡸࡸ࡭࡫࡮ࡵ࡫ࡦࡥࡹ࡯࡯࡯ࠢࡲࡪࠥࡧࠠ࡮ࡧࡶࡷࡦ࡭ࡥࠡࡤࡼࠤࡨࡵ࡮ࡴࡷࡰ࡭ࡳ࡭ࠠࡵࡪࡨࠤࡳ࡫ࡸࡵࠢࡦ࡬ࡺࡴ࡫ࠡࡱࡩࠤࡩࡧࡴࡢ࠰ࠍࠤࠥࠦࠠࠡࠢࠣࠤࠏࠦࠠࠡࠢࠣࠤࠥࠦࡒࡦࡲࡨࡥࡹ࡫ࡤࠡࡥࡤࡰࡱࡹࠠࡢࡴࡨࠤࡪࡷࡵࡪࡸࡤࡰࡪࡴࡴࠡࡶࡲࠤࡦࠦࡳࡪࡰࡪࡰࡪࠦࡣࡢ࡮࡯ࠤࡼ࡯ࡴࡩࠢࡷ࡬ࡪࠦࡣࡰࡰࡦࡥࡹ࡫࡮ࡢࡶ࡬ࡳࡳࠐࠠࠡࠢࠣࠤࠥࠦࠠࡰࡨࠣࡥࡱࡲࠠࡵࡪࡨࠤࡦࡸࡧࡶ࡯ࡨࡲࡹࡹ࠮ࠡࡋࡱࠤࡴࡺࡨࡦࡴࠣࡻࡴࡸࡤࡴ࠼ࠍࠎࠥࠦࠠࠡࠢࠣࠤࠥࠦࠠࠡࡀࡁࡂࠥࡳ࠮ࡶࡲࡧࡥࡹ࡫ࠨࡢࠫ࠾ࠤࡲ࠴ࡵࡱࡦࡤࡸࡪ࠮ࡢࠪࠌࠣࠤࠥࠦࠠࠡࠢࠣࠤࠥࠦࠊࠡࠢࠣࠤࠥࠦࠠࠡ࡫ࡶࠤࡪࡷࡵࡪࡸࡤࡰࡪࡴࡴࠡࡶࡲ࠾ࠏࠦࠠࠡࠢࠣࠤࠥࠦࠊࠡࠢࠣࠤࠥࠦࠠࠡࠢࠣࠤࡃࡄ࠾ࠡ࡯࠱ࡹࡵࡪࡡࡵࡧࠫࡥ࠰ࡨࠩࠋࠌࠣࠤࠥࠦࠠࠡࠢࠣ࠾ࡕࡧࡲࡢ࡯ࡨࡸࡪࡸࡳ࠻ࠌࠣࠤࠥࠦࠠࠡࠢࠣࠤࠥࡳࡳࡨࠢ࠽ࠤࡧࡿࡴࡦࠢࡶࡸࡷ࡯࡮ࡨࠌࠣࠤࠥࠦࠠࠡࠢࠣࠤࠥࠦࠠࡕࡪࡨࠤࡳ࡫ࡸࡵࠢࡦ࡬ࡺࡴ࡫ࠡࡱࡩࠤࡹ࡮ࡥࠡ࡯ࡨࡷࡸࡧࡧࡦࠢࡥࡩ࡮ࡴࡧࠡࡣࡸࡸ࡭࡫࡮ࡵ࡫ࡦࡥࡹ࡫ࡤࠋࠢࠣࠤࠥࠦࠠࠡࠢࠥࠦࠧࢡ")
        self.inner.update(msg)
    def copy(self):
        l1l1111_Krypto_ (u"ࠧࠨࠢࡓࡧࡷࡹࡷࡴࠠࡢࠢࡦࡳࡵࡿࠠࠩࠤࡦࡰࡴࡴࡥࠣࠫࠣࡳ࡫ࠦࡴࡩࡧࠣࡑࡆࡉࠠࡰࡤ࡭ࡩࡨࡺ࠮ࠋࠌࠣࠤࠥࠦࠠࠡࠢࠣࡘ࡭࡫ࠠࡤࡱࡳࡽࠥࡽࡩ࡭࡮ࠣ࡬ࡦࡼࡥࠡࡶ࡫ࡩࠥࡹࡡ࡮ࡧࠣ࡭ࡳࡺࡥࡳࡰࡤࡰࠥࡹࡴࡢࡶࡨࠤࡦࡹࠠࡵࡪࡨࠤࡴࡸࡩࡨ࡫ࡱࡥࡱࠦࡍࡂࡅࠍࠤࠥࠦࠠࠡࠢࠣࠤࡴࡨࡪࡦࡥࡷ࠲ࠏࠦࠠࠡࠢࠣࠤࠥࠦࡔࡩ࡫ࡶࠤࡨࡧ࡮ࠡࡤࡨࠤࡺࡹࡥࡥࠢࡷࡳࠥ࡫ࡦࡧ࡫ࡦ࡭ࡪࡴࡴ࡭ࡻࠣࡧࡴࡳࡰࡶࡶࡨࠤࡹ࡮ࡥࠡࡏࡄࡇࠥࡵࡦࠡࡵࡷࡶ࡮ࡴࡧࡴࠢࡷ࡬ࡦࡺࠊࠡࠢࠣࠤࠥࠦࠠࠡࡵ࡫ࡥࡷ࡫ࠠࡢࠢࡦࡳࡲࡳ࡯࡯ࠢ࡬ࡲ࡮ࡺࡩࡢ࡮ࠣࡷࡺࡨࡳࡵࡴ࡬ࡲ࡬࠴ࠊࠋࠢࠣࠤࠥࠦࠠࠡࠢ࠽ࡖࡪࡺࡵࡳࡰࡶ࠾ࠥࡇ࡮ࠡࡢࡋࡑࡆࡉࡠࠡࡱࡥ࡮ࡪࡩࡴࠋࠢࠣࠤࠥࠦࠠࠡࠢࠥࠦࠧࢢ")
        other = l11111ll1_Krypto_(b(l1l1111_Krypto_ (u"ࠨࠢࢣ")))
        other.l1111111l_Krypto_ = self.l1111111l_Krypto_
        other.inner = self.inner.copy()
        other.l11111111_Krypto_ = self.l11111111_Krypto_.copy()
        return other
    def digest(self):
        l1l1111_Krypto_ (u"ࠢࠣࠤࡕࡩࡹࡻࡲ࡯ࠢࡷ࡬ࡪࠦࠪࠫࡤ࡬ࡲࡦࡸࡹࠫࠬࠣࠬࡳࡵ࡮࠮ࡲࡵ࡭ࡳࡺࡡࡣ࡮ࡨ࠭ࠥࡓࡁࡄࠢࡲࡪࠥࡺࡨࡦࠢࡰࡩࡸࡹࡡࡨࡧࠣࡸ࡭ࡧࡴࠡࡪࡤࡷࠏࠦࠠࠡࠢࠣࠤࠥࠦࡢࡦࡧࡱࠤࡦࡻࡴࡩࡧࡱࡸ࡮ࡩࡡࡵࡧࡧࠤࡸࡵࠠࡧࡣࡵ࠲ࠏࠐࠠࠡࠢࠣࠤࠥࠦࠠࡕࡪ࡬ࡷࠥࡳࡥࡵࡪࡲࡨࠥࡪ࡯ࡦࡵࠣࡲࡴࡺࠠࡤࡪࡤࡲ࡬࡫ࠠࡵࡪࡨࠤࡸࡺࡡࡵࡧࠣࡳ࡫ࠦࡴࡩࡧࠣࡑࡆࡉࠠࡰࡤ࡭ࡩࡨࡺ࠮ࠋࠢࠣࠤࠥࠦࠠࠡࠢ࡜ࡳࡺࠦࡣࡢࡰࠣࡧࡴࡴࡴࡪࡰࡸࡩࠥࡻࡰࡥࡣࡷ࡭ࡳ࡭ࠠࡵࡪࡨࠤࡴࡨࡪࡦࡥࡷࠤࡦ࡬ࡴࡦࡴࠣࡧࡦࡲ࡬ࡪࡰࡪࠤࡹ࡮ࡩࡴࠢࡩࡹࡳࡩࡴࡪࡱࡱ࠲ࠏࠦࠠࠡࠢࠣࠤࠥࠦࠊࠡࠢࠣࠤࠥࠦࠠࠡ࠼ࡕࡩࡹࡻࡲ࡯࠼ࠣࡅࠥࡨࡹࡵࡧࠣࡷࡹࡸࡩ࡯ࡩࠣࡳ࡫ࠦࡠࡥ࡫ࡪࡩࡸࡺ࡟ࡴ࡫ࡽࡩࡥࠦࡢࡺࡶࡨࡷ࠳ࠦࡉࡵࠢࡰࡥࡾࠦࡣࡰࡰࡷࡥ࡮ࡴࠠ࡯ࡱࡱ࠱ࡆ࡙ࡃࡊࡋࠍࠤࠥࠦࠠࠡࠢࠣࠤࠥࡩࡨࡢࡴࡤࡧࡹ࡫ࡲࡴ࠮ࠣ࡭ࡳࡩ࡬ࡶࡦ࡬ࡲ࡬ࠦ࡮ࡶ࡮࡯ࠤࡧࡿࡴࡦࡵ࠱ࠎࠥࠦࠠࠡࠢࠣࠤࠥࠨࠢࠣࢤ")
        h = self.l11111111_Krypto_.copy()
        h.update(self.inner.digest())
        return h.digest()
    def hexdigest(self):
        l1l1111_Krypto_ (u"ࠣࠤࠥࡖࡪࡺࡵࡳࡰࠣࡸ࡭࡫ࠠࠫࠬࡳࡶ࡮ࡴࡴࡢࡤ࡯ࡩ࠯࠰ࠠࡎࡃࡆࠤࡴ࡬ࠠࡵࡪࡨࠤࡲ࡫ࡳࡴࡣࡪࡩࠥࡺࡨࡢࡶࠣ࡬ࡦࡹࠠࡣࡧࡨࡲࠏࠦࠠࠡࠢࠣࠤࠥࠦࡡࡶࡶ࡫ࡩࡳࡺࡩࡤࡣࡷࡩࡩࠦࡳࡰࠢࡩࡥࡷ࠴ࠊࠋࠢࠣࠤࠥࠦࠠࠡࠢࡗ࡬࡮ࡹࠠ࡮ࡧࡷ࡬ࡴࡪࠠࡥࡱࡨࡷࠥࡴ࡯ࡵࠢࡦ࡬ࡦࡴࡧࡦࠢࡷ࡬ࡪࠦࡳࡵࡣࡷࡩࠥࡵࡦࠡࡶ࡫ࡩࠥࡓࡁࡄࠢࡲࡦ࡯࡫ࡣࡵ࠰ࠍࠤࠥࠦࠠࠡࠢࠣࠤࠏࠦࠠࠡࠢࠣࠤࠥࠦ࠺ࡓࡧࡷࡹࡷࡴ࠺ࠡࡃࠣࡷࡹࡸࡩ࡯ࡩࠣࡳ࡫ࠦ࠲ࠫࠢࡣࡨ࡮࡭ࡥࡴࡶࡢࡷ࡮ࢀࡥࡡࠢࡥࡽࡹ࡫ࡳ࠯ࠢࡌࡸࠥࡩ࡯࡯ࡶࡤ࡭ࡳࡹࠠࡰࡰ࡯ࡽࠏࠦࠠࠡࠢࠣࠤࠥࠦࠠࡩࡧࡻࡥࡩ࡫ࡣࡪ࡯ࡤࡰࠥࡇࡓࡄࡋࡌࠤࡩ࡯ࡧࡪࡶࡶ࠲ࠏࠦࠠࠡࠢࠣࠤࠥࠦࠢࠣࠤࢥ")
        return l1l1111_Krypto_ (u"ࠤࠥࢦ").join([l1l1111_Krypto_ (u"ࠥࠩ࠵࠸ࡸࠣࢧ") % l1lllllll1_Krypto_(x)
                  for x in tuple(self.digest())])
def new(key, msg = None, l1111111l_Krypto_ = None):
    l1l1111_Krypto_ (u"ࠦࠧࠨࡃࡳࡧࡤࡸࡪࠦࡡࠡࡰࡨࡻࠥࡎࡍࡂࡅࠣࡳࡧࡰࡥࡤࡶ࠱ࠎࠏࠦࠠࠡࠢ࠽ࡔࡦࡸࡡ࡮ࡧࡷࡩࡷࡹ࠺ࠋࠢࠣࠤࠥࠦࠠ࡬ࡧࡼࠤ࠿ࠦࡢࡺࡶࡨࠤࡸࡺࡲࡪࡰࡪࠎࠥࠦࠠࠡࠢࠣࠤࠥࡱࡥࡺࠢࡩࡳࡷࠦࡴࡩࡧࠣࡑࡆࡉࠠࡰࡤ࡭ࡩࡨࡺ࠮ࠋࠢࠣࠤࠥࠦࠠࠡࠢࡌࡸࠥࡳࡵࡴࡶࠣࡦࡪࠦ࡬ࡰࡰࡪࠤࡪࡴ࡯ࡶࡩ࡫ࠤࡹࡵࠠ࡮ࡣࡷࡧ࡭ࠦࡴࡩࡧࠣࡩࡽࡶࡥࡤࡶࡨࡨࠥࡹࡥࡤࡷࡵ࡭ࡹࡿࠠ࡭ࡧࡹࡩࡱࠦ࡯ࡧࠢࡷ࡬ࡪࠐࠠࠡࠢࠣࠤࠥࠦࠠࡎࡃࡆ࠲ࠥࡎ࡯ࡸࡧࡹࡩࡷ࠲ࠠࡵࡪࡨࡶࡪࠦࡩࡴࠢࡱࡳࠥࡨࡥ࡯ࡧࡩ࡭ࡹࠦࡩ࡯ࠢࡸࡷ࡮ࡴࡧࠡ࡭ࡨࡽࡸࠦ࡬ࡰࡰࡪࡩࡷࠦࡴࡩࡣࡱࠤࡹ࡮ࡥࠋࠢࠣࠤࠥࠦࠠࠡࠢࡣࡨ࡮࡭ࡥࡴࡶࡢࡷ࡮ࢀࡥࡡࠢࡲࡪࠥࡺࡨࡦࠢࡸࡲࡩ࡫ࡲ࡭ࡻ࡬ࡲ࡬ࠦࡨࡢࡵ࡫ࠤࡦࡲࡧࡰࡴ࡬ࡸ࡭ࡳ࠮ࠋࠢࠣࠤࠥࠦࠠ࡮ࡵࡪࠤ࠿ࠦࡢࡺࡶࡨࠤࡸࡺࡲࡪࡰࡪࠎࠥࠦࠠࠡࠢࠣࠤ࡚ࠥࡨࡦࠢࡹࡩࡷࡿࠠࡧ࡫ࡵࡷࡹࠦࡣࡩࡷࡱ࡯ࠥࡵࡦࠡࡶ࡫ࡩࠥࡳࡥࡴࡵࡤ࡫ࡪࠦࡴࡰࠢࡤࡹࡹ࡮ࡥ࡯ࡶ࡬ࡧࡦࡺࡥ࠯ࠌࠣࠤࠥࠦࠠࠡࠢࠣࡍࡹࠦࡩࡴࠢࡨࡵࡺ࡯ࡶࡢ࡮ࡨࡲࡹࠦࡴࡰࠢࡤࡲࠥ࡫ࡡࡳ࡮ࡼࠤࡨࡧ࡬࡭ࠢࡷࡳࠥࡦࡈࡎࡃࡆ࠲ࡺࡶࡤࡢࡶࡨࠬ࠮ࡦ࠮ࠋࠢࠣࠤࠥࠦࠠࠡࠢࡒࡴࡹ࡯࡯࡯ࡣ࡯࠲ࠏࠦࠠࠡࠢ࠽ࡔࡦࡸࡡ࡮ࡧࡷࡩࡷࠦࡤࡪࡩࡨࡷࡹࡳ࡯ࡥ࠼ࠍࠤࠥࠦࠠࠡࠢࠣࠤ࡙࡮ࡥࠡࡪࡤࡷ࡭ࠦࡴࡰࠢࡸࡷࡪࠦࡴࡰࠢ࡬ࡱࡵࡲࡥ࡮ࡧࡱࡸࠥࡺࡨࡦࠢࡋࡑࡆࡉ࠮ࠡࡆࡨࡪࡦࡻ࡬ࡵࠢ࡬ࡷࠥࡦࡃࡳࡻࡳࡸࡴ࠴ࡈࡢࡵ࡫࠲ࡒࡊ࠵ࡡ࠰ࠍࠤࠥࠦࠠ࠻ࡖࡼࡴࡪࠦࡤࡪࡩࡨࡷࡹࡳ࡯ࡥ࠼ࠍࠤࠥࠦࠠࠡࠢࠣࠤࡆࠦࡨࡢࡵ࡫ࠤࡲࡵࡤࡶ࡮ࡨࠤࡴࡸࠠࡪࡰࡶࡸࡦࡴࡴࡪࡣࡷࡩࡩࠦ࡯ࡣ࡬ࡨࡧࡹࠦࡦࡳࡱࡰࠤࡥࡉࡲࡺࡲࡷࡳ࠳ࡎࡡࡴࡪࡣࠎࠥࠦࠠࠡ࠼ࡕࡩࡹࡻࡲ࡯ࡵ࠽ࠤࡆࡴࠠࡡࡊࡐࡅࡈࡦࠠࡰࡤ࡭ࡩࡨࡺࠊࠡࠢࠣࠤࠧࠨࠢࢨ")
    return l11111ll1_Krypto_(key, msg, l1111111l_Krypto_)