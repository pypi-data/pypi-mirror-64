      subroutine PetscFEOpenCLSetRealType(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscDataType b ! PetscDataType
       integer z
       end subroutine
      subroutine PetscFEOpenCLGetRealType(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscDataType b ! PetscDataType
       integer z
       end subroutine
      subroutine PetscFEGeomComplete(a,z)
      use petscdmdef
       PetscFEGeom a ! PetscFEGeom
       integer z
       end subroutine
      subroutine PetscFESetFromOptions(a,z)
      use petscdmdef
       PetscFE a ! PetscFE
       integer z
       end subroutine
      subroutine PetscFEDestroy(a,z)
      use petscdmdef
       PetscFE a ! PetscFE
       integer z
       end subroutine
      subroutine PetscFECreate(a,b,z)
      use petscdmdef
       integer a ! MPI_Comm
       PetscFE b ! PetscFE
       integer z
       end subroutine
      subroutine PetscFEGetSpatialDimension(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscFESetNumComponents(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscFEGetNumComponents(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscFESetTileSizes(a,b,c,d,e,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine PetscFEGetTileSizes(a,b,c,d,e,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine PetscFEGetBasisSpace(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscSpace b ! PetscSpace
       integer z
       end subroutine
      subroutine PetscFESetBasisSpace(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscSpace b ! PetscSpace
       integer z
       end subroutine
      subroutine PetscFEGetDualSpace(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscDualSpace b ! PetscDualSpace
       integer z
       end subroutine
      subroutine PetscFESetDualSpace(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscDualSpace b ! PetscDualSpace
       integer z
       end subroutine
      subroutine PetscFEGetQuadrature(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscQuadrature b ! PetscQuadrature
       integer z
       end subroutine
      subroutine PetscFESetQuadrature(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscQuadrature b ! PetscQuadrature
       integer z
       end subroutine
      subroutine PetscFEGetFaceQuadrature(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscQuadrature b ! PetscQuadrature
       integer z
       end subroutine
      subroutine PetscFESetFaceQuadrature(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscQuadrature b ! PetscQuadrature
       integer z
       end subroutine
      subroutine PetscFECopyQuadrature(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscFE b ! PetscFE
       integer z
       end subroutine
      subroutine PetscFEGetDimension(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscFEGetHeightSubspace(a,b,c,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscInt b ! PetscInt
       PetscFE c ! PetscFE
       integer z
       end subroutine
      subroutine PetscFERefine(a,b,z)
      use petscdmdef
       PetscFE a ! PetscFE
       PetscFE b ! PetscFE
       integer z
       end subroutine
