      subroutine PetscLimiterSetFromOptions(a,z)
      use petscdmdef
       PetscLimiter a ! PetscLimiter
       integer z
       end subroutine
      subroutine PetscLimiterDestroy(a,z)
      use petscdmdef
       PetscLimiter a ! PetscLimiter
       integer z
       end subroutine
      subroutine PetscLimiterCreate(a,b,z)
      use petscdmdef
       integer a ! MPI_Comm
       PetscLimiter b ! PetscLimiter
       integer z
       end subroutine
      subroutine PetscLimiterLimit(a,b,c,z)
      use petscdmdef
       PetscLimiter a ! PetscLimiter
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine PetscFVSetFromOptions(a,z)
      use petscdmdef
       PetscFV a ! PetscFV
       integer z
       end subroutine
      subroutine PetscFVSetUp(a,z)
      use petscdmdef
       PetscFV a ! PetscFV
       integer z
       end subroutine
      subroutine PetscFVDestroy(a,z)
      use petscdmdef
       PetscFV a ! PetscFV
       integer z
       end subroutine
      subroutine PetscFVCreate(a,b,z)
      use petscdmdef
       integer a ! MPI_Comm
       PetscFV b ! PetscFV
       integer z
       end subroutine
      subroutine PetscFVSetLimiter(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscLimiter b ! PetscLimiter
       integer z
       end subroutine
      subroutine PetscFVGetLimiter(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscLimiter b ! PetscLimiter
       integer z
       end subroutine
      subroutine PetscFVSetNumComponents(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscFVGetNumComponents(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscFVSetSpatialDimension(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscFVGetSpatialDimension(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscFVSetComputeGradients(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine PetscFVGetComputeGradients(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine PetscFVSetQuadrature(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscQuadrature b ! PetscQuadrature
       integer z
       end subroutine
      subroutine PetscFVGetQuadrature(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscQuadrature b ! PetscQuadrature
       integer z
       end subroutine
      subroutine PetscFVGetDualSpace(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscDualSpace b ! PetscDualSpace
       integer z
       end subroutine
      subroutine PetscFVSetDualSpace(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscDualSpace b ! PetscDualSpace
       integer z
       end subroutine
      subroutine PetscFVRefine(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscFV b ! PetscFV
       integer z
       end subroutine
      subroutine PetscFVLeastSquaresSetMaxFaces(a,b,z)
      use petscdmdef
       PetscFV a ! PetscFV
       PetscInt b ! PetscInt
       integer z
       end subroutine
