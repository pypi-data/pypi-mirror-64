[tox]
minversion = 1.6
skipsdist = True
envlist = py35,py27,pep8

[testenv]
whitelist_externals = rm
setenv = VIRTUAL_ENV={envdir}
         PYTHONWARNINGS=default::DeprecationWarning
usedevelop = True
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky} {opts} {packages}

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
  /usr/bin/find . -type f -name "*.py[co]" -delete
  rm -f .testrepository/times.dbm
  stestr run {posargs}

[testenv:debug]
basepython = python3
commands = oslo_debug_helper {posargs}

[testenv:pep8]
basepython = python3
commands =
  flake8 {posargs} cloudkitty

[testenv:cover]
basepython = python3
setenv =
    VIRTUAL_ENV={envdir}
    PYTHON=coverage run --source $project --parallel-mode
commands =
    stestr run '{posargs}'
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[testenv:genconfig]
basepython = python3
commands =
  oslo-config-generator --config-file etc/oslo-config-generator/cloudkitty.conf

[testenv:genpolicy]
basepython = python3
commands = oslopolicy-sample-generator --config-file=etc/oslo-policy-generator/cloudkitty.conf

[testenv:docs]
# TODO: switch back to python3 after removing wsme from the api
basepython = python2
commands = python setup.py build_sphinx

[testenv:venv]
basepython = python3
commands = {posargs}

[flake8]
filename = *.py,app.wsgi
exclude = .git,.venv,.tox,dist,doc,*egg,build,.ropeproject,releasenotes
ignore = H105

[hacking]
import_exceptions = cloudkitty.i18n
local-check-factory = cloudkitty.hacking.checks.factory

[testenv:releasenotes]
basepython = python3
commands = sphinx-build -a -E -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:functional]
basepython = python3
setenv = TEST_FUNCTIONAL = 1
# Some tests do push and remove data from the storage backend, so this is done
# in order to keep data consistency
commands = stestr run --concurrency 1 {posargs}
