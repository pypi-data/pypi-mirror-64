---
data:
  project_dir: ""
  train:
    paths:
      - "data/train.txt"
  eval:
    paths:
      - "data/test.txt"
  infer:
    paths:
      - "data/test.txt"
  task:
    name: TextClsTask
    preparer:
      enable: true
      name: TextClsPreparer
      done_sign: "exp/prepare.done"
      reuse: true
    use_dense: false
    language: english
    clean_english: true
    vocab_min_frequency: 0
    use_custom_vocab: True
    text_vocab: "data/text_vocab.txt"
    label_vocab: "exp/label_vocab.txt"
    max_seq_len: 40
    num_parallel_calls: 12
    num_prefetch_batch: 2
    shuffle_buffer_size: 6000
    need_shuffle: true
    batch_size: 16
    epochs: 30
    classes:
      positive_id: 1
      num_classes: 6

model:
  name: SeqclassCNNModel
  type: keras
  use_pre_train_emb: false
  pre_train_emb_path: ""
  embedding_path: "exp/embeding.pkl"

  net:
    structure:
      embedding_size: 128
      emb_trainable: true
      num_units: 128
      num_layers: 2
      dropout_rate: 0.5
      pooling:
        - max
        - mean
      filter_sizes:
        - 3
        - 4
        - 5
      num_filters: 128
      l2_reg_lambda: 0

solver:
  name: RawClassSolver
  adversarial:
    enable: false # whether to using adversiral training
    adv_alpha: 0.5 # adviseral alpha of loss
    adv_epslion: 0.1 # adviseral example epslion
  model_average:
    enable: false # use average model
    var_avg_decay: 0.99 # the decay rate of varaibles
  optimizer:
    name: gradientdecent
    loss: CrossEntropyLoss
    label_smoothing: 0.0 # label smoothing rate
    learning_rate:
      rate: 0.1 # learning rate
      type:  exp_decay # learning rate type
      decay_rate: 0.99  # the lr decay rate
      decay_steps: 100  # the lr decay_step for optimizer
    clip_global_norm: 3.0 # clip global norm
  metrics:
    pos_label: 1 # int, same to sklearn
    cals:
      - name: AccuracyCal
        arguments: Null
      - name: PrecisionCal
        arguments:
          average: 'weighted'
      - name: RecallCal
        arguments:
          average: 'weighted'
      - name: F1ScoreCal
        arguments:
          average: 'weighted'
  postproc:
    name: SavePredPostProc
    res_file: "res/infer_res.txt"
  saver:
    model_path: "ckpt/cnn-cls/"
    max_to_keep: 30
    save_checkpoint_steps: 100
    print_every: 10
  service:
    model_path: "exp/cnn-cls/service"
    model_version: "1"
  run_config:
    tf_random_seed: null
    allow_soft_placement: true
    log_device_placement: false
    intra_op_parallelism_threads: 10
    inter_op_parallelism_threads: 10
    allow_growth: true
