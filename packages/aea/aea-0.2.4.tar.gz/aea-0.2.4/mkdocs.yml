site_name: AEA Developer Documentation
site_url: https://docs.fetch.ai/
site_description: Everything you need to know about Fetch.AI. 
#repo_url: https://github.com/fetchai/docs // commented out to remove edit option
#repo_name: 'GitHub'
site_author: diarmid.campbell@fetch.ai

theme:
  name: 'material'
  logo:
    icon: code
  feature:
    tabs: true  

nav:
  - AEA Framework:
    - Welcome: 'index.md'
    - Concepts:
      - Agent-oriented development: 'agent-oriented-development.md'
      - Vision: 'vision.md'
      - Application areas: 'app-areas.md'
      - Relation to OEF and Ledger: 'oef-ledger.md'
      - Identity: 'identity.md'
      - Trust issues: 'trust.md'
    - Demos:
      - Aries Cloud Agent: 'aries-cloud-agent.md'
      - Car park skills: 'car-park-skills.md'
      - Generic skills: 'generic-skills.md'
      - Gym example: 'gym-example.md'
      - Gym skill: 'gym-skill.md'
      - ML skills: 'ml-skills.md'
      - TAC skills: 'tac-skills.md'
      - TAC external app: 'tac.md'
      - Weather skills: 'weather-skills.md'
      - Thermometer skills: 'thermometer-skills.md'
    - Development:
      - Getting started:
        - Ways to build an AEA: 'steps.md'
        - AEA quick start: 'quickstart.md'
        - AEA and web frameworks: 'aea-vs-mvc.md'
        - Build an AEA with the CLI: 'build-aea-step-by-step.md'
        - Build a skill for an AEA: 'skill-guide.md'
        - Build an AEA programmatically: 'build-aea-programmatically.md'
        - AEAs vs agents: 'agent-vs-aea.md'
        - CLI vs programmatic AEAs: 'cli-vs-programmatic-aeas.md'
      - Step by step guides:
        - Thermometer skills step by step: 'thermometer-skills-step-by-step.md'
      - Use case components:
        - Generic skills: 'generic-skills.md'
        - ORM integration: 'orm-integration-to-generic.md'
        - Frontend intergration: 'connect-a-frontend.md'
        - HTTP Connection: 'http-connection-and-skill.md'
      - Architecture:
        - Design principles: 'design-principles.md'
        - Architectural diagram: 'diagram.md'
        - Core components: 'core-components.md'
        - File structure: 'file-structure.md'
      - CLI:
        - Installation: 'cli-how-to.md'
        - Commands: 'cli-commands.md'
        - Package structure: 'package-imports.md'
        - GUI: 'cli-gui.md'
        - Generating wealth: 'wealth.md'
      - Developer guides:
        - Version: 'version.md'
        - Skill: 'skill.md'
        - Protocol: 'protocol.md'
        - Connection: 'connection.md'
        - Scaffolding packages: 'scaffolding.md'
        - Generating protocols: 'protocol-generator.md'
        - Logging: 'logging.md'
        - Build an AEA on a Raspberry Pi: 'raspberry-set-up.md'
        - Using public ledgers: 'integration.md'
        - Use multiplexer stand-alone: 'multiplexer-standalone.md'
        - Create stand-alone transaction: 'standalone-transaction.md'
        - Create decision-maker transaction: 'decision-maker-transaction.md'
        - Deployment: 'deployment.md'
      - API:
        - AEA: 'api/aea.md'
        - Agent: 'api/agent.md'
        - Configurations:
          - Base: 'api/configurations/base.md'
          - Loader: 'api/configurations/loader.md'
        - Connections:
          - Base: 'api/connections/base.md'          
          - Stub Connection: 'api/connections/stub/connection.md'
        - Context: 'api/context/base.md'
        - Crypto:
          - Base: 'api/crytpo/base.md'
          - Ethereum: 'api/crypto/ethereum.md'
          - Fetchai: 'api/crypto/fetchai.md'
          - LedgerApis: 'api/crypto/ledger_apis.md'
          - Wallet: 'api/crypto/wallet.md'
        - Helpers:
          - Dialogue:
            - Base: 'api/helpers/dialogue/base.md'
          - Search:
            - Generic: 'api/helpers/search/generic.md'
            - Models: 'api/helpers/search/models.md'
        - Identity:
          - Base: 'api/identity/base.md'
        - Mail:
          - Base: 'api/mail/base.md'
        - Protocols:
          - Base: 'api/protocols/base.md'
          - Default Protocol:
            - Message: 'api/protocols/default/message.md'
            - Serialization: 'api/protocols/default/serialization.md'
        - Registries:
          - Base: 'api/registries/base.md'
        - Skills:
          - Base: 'api/skills/base.md'
          - Error Skill: 'api/skills/error/handlers.md'
          - Behaviors: 'api/skills/behaviours.md'
          - Task: 'api/skills/tasks.md'
    - Q&A: 'questions-and-answers.md'

plugins:
    - markdownmermaid

markdown_extensions:
  - pymdownx.superfences
  - admonition

extra_css:
    - css/my-styles.css

extra_javascript:
    - https://unpkg.com/mermaid@7.1.2/dist/mermaid.min.js
