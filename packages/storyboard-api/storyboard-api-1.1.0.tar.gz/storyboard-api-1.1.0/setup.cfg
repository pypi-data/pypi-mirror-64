[metadata]
name = storyboard-api
summary = StoryBoard Task Tracker API Service
description-file = 
	README.rst
description-content-type = text/x-rst; charset=UTF-8
author = OpenDev
author-email = openstack-discuss@lists.openstack.org
home-page = https://docs.openstack.org/infra/storyboard
project_urls = 
	Browse Source = https://opendev.org/opendev/storyboard
	Bug Reporting = https://storyboard.openstack.org/#!/project/opendev/storyboard
	Documentation = https://docs.openstack.org/infra/storyboard
	Git Clone URL = https://opendev.org/opendev/storyboard
classifier = 
	Environment :: Web Environment
	Intended Audience :: Developers
	Intended Audience :: Information Technology
	Intended Audience :: System Administrators
	License :: OSI Approved :: Apache Software License
	Operating System :: OS Independent
	Operating System :: POSIX :: Linux
	Programming Language :: Python
	Programming Language :: Python :: 2.7
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.5
	Topic :: Software Development :: Bug Tracking

[files]
packages = 
	storyboard
data_files = 
	etc/storyboard =
	etc/storyboard.conf.sample

[entry_points]
console_scripts = 
	storyboard-api = storyboard.api.app:start
	storyboard-subscriber = storyboard.notifications.subscriber:subscribe
	storyboard-worker-daemon = storyboard.plugin.event_worker:run_daemon
	storyboard-db-manage = storyboard.db.migration.cli:main
	storyboard-migrate = storyboard.migrate.cli:main
	storyboard-cron = storyboard.plugin.cron:main
storyboard.plugin.worker = 
	subscription = storyboard.plugin.subscription.base:Subscription
	subscription-email = storyboard.plugin.email.workers:SubscriptionEmailWorker
storyboard.plugin.user_preferences = 
	email = storyboard.plugin.email.preferences:EmailPreferences
storyboard.plugin.scheduler = 
	token-cleaner = storyboard.plugin.token_cleaner.cleaner:TokenCleaner

[wheel]
universal = 1

[build_sphinx]
warning-is-error = 1
source-dir = doc/source
build-dir = doc/build
all_files = 1

[upload_sphinx]
upload-dir = doc/build/html

[compile_catalog]
directory = storyboard/locale
domain = storyboard

[update_catalog]
domain = storyboard
output_dir = storyboard/locale
input_file = storyboard/locale/storyboard.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = storyboard/locale/storyboard.pot

[egg_info]
tag_build = 
tag_date = 0

