// Generated by CoffeeScript 1.12.7
(function() {
  angular.module('ajenti.cpu_temp', ['core', 'ajenti.dashboard']);

}).call(this);

// Generated by CoffeeScript 1.12.7
(function() {
  var TempChart, TempChartInitFun, TempChartSetBackground;

  TempChart = null;

  TempChartInitFun = function(ctx) {
    return new Chart(ctx, {
      type: 'line',
      data: {
        labels: [],
        datasets: [
          {
            label: 'CPU Temperature',
            backgroundColor: 'rgba(233, 76, 65, 0.2)',
            pointRadius: 0,
            data: []
          }
        ]
      },
      options: {
        scales: {
          yAxes: [
            {
              ticks: {
                min: 25,
                max: 105
              },
              display: false
            }
          ],
          xAxes: [
            {
              ticks: {
                min: 1
              },
              display: false
            }
          ]
        },
        legend: {
          display: false
        }
      }
    });
  };

  TempChartSetBackground = function(canvas) {
    var context, setGradient;
    context = canvas.getContext('2d');
    setGradient = context.createLinearGradient(0, 0, 0, canvas.height);
    setGradient.addColorStop(0.1, 'rgba(233, 76, 65, 1)');
    setGradient.addColorStop(0.7, 'rgba(233, 76, 65, 0)');
    return TempChart.data.datasets[0].backgroundColor = setGradient;
  };

  angular.module('ajenti.cpu_temp').controller('CPUTempDashController', function($scope, $element) {
    TempChart = TempChartInitFun($element.find('canvas'));
    return $scope.$on('widget-update', function($event, id, data) {
      var TempValue, canvas;
      if (id !== $scope.widget.id) {
        return;
      }
      TempValue = data.temp.value / 1000;
      canvas = $element.find('canvas')[0];
      TempChartSetBackground(canvas);
      if (data.temp.unit === 'F') {
        TempValue = Math.round(TempValue * 1.8 + 32);
        $scope.unit = '℉';
      } else {
        $scope.unit = '℃';
      }
      $scope.temperature = TempValue;
      TempChart.options.scales.yAxes[0].ticks.min = data.chart.min;
      TempChart.options.scales.yAxes[0].ticks.max = data.chart.max;
      TempChart.data.labels.push(new Date().toLocaleTimeString());
      TempChart.data.datasets.forEach((function(_this) {
        return function(dataset) {
          return dataset.data.push(TempValue);
        };
      })(this));
      if (TempChart.data.labels.length >= 120) {
        TempChart.data.labels.shift();
        TempChart.data.datasets.forEach((function(_this) {
          return function(dataset) {
            dataset.data[0] = dataset.data[1];
            return dataset.data.splice(1, 1);
          };
        })(this));
      }
      TempChart.update();
    });
  });

  angular.module('ajenti.cpu_temp').controller('CPUTempDashConfigController', function($scope) {
    var base, base1;
    if ((base = $scope.configuredWidget.config).temp == null) {
      base.temp = {
        unit: 'C',
        file: 'thermal_zone0/temp'
      };
    }
    if ((base1 = $scope.configuredWidget.config).tempchart == null) {
      base1.tempchart = {
        tempmin: 35,
        tempmax: 105
      };
    }
    if ($scope.configuredWidget.config.temp.unit === 'F') {
      $scope.unit = '℉';
    } else if ($scope.configuredWidget.config.temp.unit === 'C') {
      $scope.unit = '℃';
    }
    return $scope.$watch('configuredWidget.config.temp.unit', function(newValue, oldValue) {
      if (newValue !== oldValue) {
        if (newValue === 'F') {
          $scope.configuredWidget.config.tempchart.tempmin = Math.round($scope.configuredWidget.config.tempchart.tempmin * 1.8 + 32);
          $scope.configuredWidget.config.tempchart.tempmax = Math.round($scope.configuredWidget.config.tempchart.tempmax * 1.8 + 32);
          return $scope.unit = '℉';
        } else if (newValue === 'C') {
          $scope.configuredWidget.config.tempchart.tempmin = Math.round(($scope.configuredWidget.config.tempchart.tempmin - 32) / 1.8);
          $scope.configuredWidget.config.tempchart.tempmax = Math.round(($scope.configuredWidget.config.tempchart.tempmax - 32) / 1.8);
          return $scope.unit = '℃';
        }
      }
    });
  });

}).call(this);

