# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pyliveupdate.grpc.updateregister_pb2 as updateregister__pb2


class StubRegisterStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.register = channel.unary_unary(
        '/updateregister.StubRegister/register',
        request_serializer=updateregister__pb2.RegisterRequest.SerializeToString,
        response_deserializer=updateregister__pb2.RegisterResponse.FromString,
        )


class StubRegisterServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def register(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StubRegisterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'register': grpc.unary_unary_rpc_method_handler(
          servicer.register,
          request_deserializer=updateregister__pb2.RegisterRequest.FromString,
          response_serializer=updateregister__pb2.RegisterResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'updateregister.StubRegister', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
