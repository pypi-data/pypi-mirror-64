# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import ore_pb2 as ore__pb2


class OreServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateOre = channel.unary_unary(
                '/apiserver.v2.OreService/CreateOre',
                request_serializer=ore__pb2.CreateOreReq.SerializeToString,
                response_deserializer=ore__pb2.Ore.FromString,
                )
        self.GetOre = channel.unary_unary(
                '/apiserver.v2.OreService/GetOre',
                request_serializer=ore__pb2.GetOreReq.SerializeToString,
                response_deserializer=ore__pb2.Ore.FromString,
                )
        self.UpdateOre = channel.unary_unary(
                '/apiserver.v2.OreService/UpdateOre',
                request_serializer=ore__pb2.UpdateOreReq.SerializeToString,
                response_deserializer=ore__pb2.Ore.FromString,
                )
        self.RemoveOre = channel.unary_unary(
                '/apiserver.v2.OreService/RemoveOre',
                request_serializer=ore__pb2.RemoveOreReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OreServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def CreateOre(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOre(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOre(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveOre(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateOre': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOre,
                    request_deserializer=ore__pb2.CreateOreReq.FromString,
                    response_serializer=ore__pb2.Ore.SerializeToString,
            ),
            'GetOre': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOre,
                    request_deserializer=ore__pb2.GetOreReq.FromString,
                    response_serializer=ore__pb2.Ore.SerializeToString,
            ),
            'UpdateOre': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOre,
                    request_deserializer=ore__pb2.UpdateOreReq.FromString,
                    response_serializer=ore__pb2.Ore.SerializeToString,
            ),
            'RemoveOre': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveOre,
                    request_deserializer=ore__pb2.RemoveOreReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'apiserver.v2.OreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OreService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def CreateOre(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.OreService/CreateOre',
            ore__pb2.CreateOreReq.SerializeToString,
            ore__pb2.Ore.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOre(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.OreService/GetOre',
            ore__pb2.GetOreReq.SerializeToString,
            ore__pb2.Ore.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOre(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.OreService/UpdateOre',
            ore__pb2.UpdateOreReq.SerializeToString,
            ore__pb2.Ore.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveOre(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.OreService/RemoveOre',
            ore__pb2.RemoveOreReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
