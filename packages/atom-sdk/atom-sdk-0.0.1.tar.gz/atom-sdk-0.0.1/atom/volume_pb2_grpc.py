# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import volume_pb2 as volume__pb2


class VolumeServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateVolume = channel.unary_unary(
                '/apiserver.v2.VolumeService/CreateVolume',
                request_serializer=volume__pb2.CreateVolumeReq.SerializeToString,
                response_deserializer=volume__pb2.Volume.FromString,
                )
        self.GetVolume = channel.unary_unary(
                '/apiserver.v2.VolumeService/GetVolume',
                request_serializer=volume__pb2.GetVolumeReq.SerializeToString,
                response_deserializer=volume__pb2.Volume.FromString,
                )
        self.ListVolumes = channel.unary_unary(
                '/apiserver.v2.VolumeService/ListVolumes',
                request_serializer=volume__pb2.ListVolumesReq.SerializeToString,
                response_deserializer=volume__pb2.ListVolumesRes.FromString,
                )
        self.GetVolumeCredential = channel.unary_unary(
                '/apiserver.v2.VolumeService/GetVolumeCredential',
                request_serializer=volume__pb2.GetVolumeCredentialReq.SerializeToString,
                response_deserializer=volume__pb2.Volume.Credential.FromString,
                )
        self.GetFileURL = channel.unary_unary(
                '/apiserver.v2.VolumeService/GetFileURL',
                request_serializer=volume__pb2.GetFileURLReq.SerializeToString,
                response_deserializer=volume__pb2.GetFileURLRes.FromString,
                )
        self.ListVolumeData = channel.unary_stream(
                '/apiserver.v2.VolumeService/ListVolumeData',
                request_serializer=volume__pb2.ListVolumeDataReq.SerializeToString,
                response_deserializer=volume__pb2.Volume.Datum.FromString,
                )
        self.RemoveVolume = channel.unary_unary(
                '/apiserver.v2.VolumeService/RemoveVolume',
                request_serializer=volume__pb2.RemoveVolumeReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class VolumeServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def CreateVolume(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVolume(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVolumes(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVolumeCredential(self, request, context):
        """deprecated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileURL(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVolumeData(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveVolume(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VolumeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVolume,
                    request_deserializer=volume__pb2.CreateVolumeReq.FromString,
                    response_serializer=volume__pb2.Volume.SerializeToString,
            ),
            'GetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVolume,
                    request_deserializer=volume__pb2.GetVolumeReq.FromString,
                    response_serializer=volume__pb2.Volume.SerializeToString,
            ),
            'ListVolumes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVolumes,
                    request_deserializer=volume__pb2.ListVolumesReq.FromString,
                    response_serializer=volume__pb2.ListVolumesRes.SerializeToString,
            ),
            'GetVolumeCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVolumeCredential,
                    request_deserializer=volume__pb2.GetVolumeCredentialReq.FromString,
                    response_serializer=volume__pb2.Volume.Credential.SerializeToString,
            ),
            'GetFileURL': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileURL,
                    request_deserializer=volume__pb2.GetFileURLReq.FromString,
                    response_serializer=volume__pb2.GetFileURLRes.SerializeToString,
            ),
            'ListVolumeData': grpc.unary_stream_rpc_method_handler(
                    servicer.ListVolumeData,
                    request_deserializer=volume__pb2.ListVolumeDataReq.FromString,
                    response_serializer=volume__pb2.Volume.Datum.SerializeToString,
            ),
            'RemoveVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveVolume,
                    request_deserializer=volume__pb2.RemoveVolumeReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'apiserver.v2.VolumeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VolumeService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def CreateVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.VolumeService/CreateVolume',
            volume__pb2.CreateVolumeReq.SerializeToString,
            volume__pb2.Volume.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.VolumeService/GetVolume',
            volume__pb2.GetVolumeReq.SerializeToString,
            volume__pb2.Volume.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVolumes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.VolumeService/ListVolumes',
            volume__pb2.ListVolumesReq.SerializeToString,
            volume__pb2.ListVolumesRes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVolumeCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.VolumeService/GetVolumeCredential',
            volume__pb2.GetVolumeCredentialReq.SerializeToString,
            volume__pb2.Volume.Credential.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFileURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.VolumeService/GetFileURL',
            volume__pb2.GetFileURLReq.SerializeToString,
            volume__pb2.GetFileURLRes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVolumeData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/apiserver.v2.VolumeService/ListVolumeData',
            volume__pb2.ListVolumeDataReq.SerializeToString,
            volume__pb2.Volume.Datum.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.VolumeService/RemoveVolume',
            volume__pb2.RemoveVolumeReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
