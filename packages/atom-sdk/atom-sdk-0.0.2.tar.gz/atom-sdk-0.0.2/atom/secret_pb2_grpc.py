# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import secret_pb2 as secret__pb2


class SecretServiceStub(object):
    """user secret management service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSecret = channel.unary_unary(
                '/apiserver.v2.SecretService/CreateSecret',
                request_serializer=secret__pb2.CreateSecretReq.SerializeToString,
                response_deserializer=secret__pb2.Secret.FromString,
                )
        self.GetSecret = channel.unary_unary(
                '/apiserver.v2.SecretService/GetSecret',
                request_serializer=secret__pb2.GetSecretReq.SerializeToString,
                response_deserializer=secret__pb2.Secret.FromString,
                )
        self.ListSecrets = channel.unary_unary(
                '/apiserver.v2.SecretService/ListSecrets',
                request_serializer=secret__pb2.ListSecretsReq.SerializeToString,
                response_deserializer=secret__pb2.ListSecretsRes.FromString,
                )
        self.RemoveSecret = channel.unary_unary(
                '/apiserver.v2.SecretService/RemoveSecret',
                request_serializer=secret__pb2.RemoveSecretReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class SecretServiceServicer(object):
    """user secret management service
    """

    def CreateSecret(self, request, context):
        """create a new secret
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSecret(self, request, context):
        """get a user secret
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSecrets(self, request, context):
        """list all secrets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveSecret(self, request, context):
        """remove a secret
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SecretServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSecret,
                    request_deserializer=secret__pb2.CreateSecretReq.FromString,
                    response_serializer=secret__pb2.Secret.SerializeToString,
            ),
            'GetSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSecret,
                    request_deserializer=secret__pb2.GetSecretReq.FromString,
                    response_serializer=secret__pb2.Secret.SerializeToString,
            ),
            'ListSecrets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSecrets,
                    request_deserializer=secret__pb2.ListSecretsReq.FromString,
                    response_serializer=secret__pb2.ListSecretsRes.SerializeToString,
            ),
            'RemoveSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveSecret,
                    request_deserializer=secret__pb2.RemoveSecretReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'apiserver.v2.SecretService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SecretService(object):
    """user secret management service
    """

    @staticmethod
    def CreateSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.SecretService/CreateSecret',
            secret__pb2.CreateSecretReq.SerializeToString,
            secret__pb2.Secret.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.SecretService/GetSecret',
            secret__pb2.GetSecretReq.SerializeToString,
            secret__pb2.Secret.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSecrets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.SecretService/ListSecrets',
            secret__pb2.ListSecretsReq.SerializeToString,
            secret__pb2.ListSecretsRes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/apiserver.v2.SecretService/RemoveSecret',
            secret__pb2.RemoveSecretReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
