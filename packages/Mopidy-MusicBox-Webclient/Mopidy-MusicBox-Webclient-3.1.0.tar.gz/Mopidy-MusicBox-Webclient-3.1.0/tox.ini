[tox]
envlist = py37, py38, black, check-manifest, flake8, eslint, csslint, jstidy
#envlist = py37, py38, black, check-manifest, flake8, jstest, eslint, csslint, jstidy

[testenv]
sitepackages = true
deps = .[test]
commands =
    python -m pytest \
        --basetemp={envtmpdir} \
        --cov=mopidy_musicbox_webclient --cov-report=term-missing \
        {posargs}

[testenv:black]
deps = .[lint]
commands = python -m black --check .

[testenv:check-manifest]
deps = .[lint]
commands = python -m check_manifest

[testenv:flake8]
deps = .[lint]
commands = python -m flake8 --show-source --statistics --max-line-length 120

[testenv:jstest]
whitelist_externals =
    /bin/bash
deps = .[node]
commands =
    - nodeenv --prebuilt {toxworkdir}/node_env
    bash -c '. {toxworkdir}/node_env/bin/activate; npm install; npm test'

[testenv:eslint]
whitelist_externals =
    /bin/bash
deps = .[node]
commands =
    - nodeenv --prebuilt {toxworkdir}/node_env
    bash -c '. {toxworkdir}/node_env/bin/activate; npm install; npm run eslint'

[testenv:csslint]
whitelist_externals =
    /bin/bash
deps = .[node]
skip_install = true
commands =
    - nodeenv --prebuilt {toxworkdir}/node_env
    bash -c '. {toxworkdir}/node_env/bin/activate; npm install; npm run csslint'

[testenv:jstidy]
whitelist_externals =
    /bin/bash
deps = .[node]
commands =
    - nodeenv --prebuilt {toxworkdir}/node_env
    bash -c '. {toxworkdir}/node_env/bin/activate; npm install; npm run tidy'
