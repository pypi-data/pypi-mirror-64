# This is the CI matrix that runs per push event.

trigger:
- master

stages:
- stage: Initial
  jobs:
  - job: 'PEP517'
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - task: UsePythonVersion@0

    # Make sure that packaging will work
    - script: |
        python -m pip install --upgrade pip setuptools pep517 twine
        python -m pep517.build --source .
        twine check dist/*
      displayName: 'pep517 build'

  - job: 'PEP8'
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - script: |
        python -m pip install --upgrade pip setuptools
        pip install flake8
        flake8 synphot --count
      displayName: 'PEP 8 check'

  - job: 'Audit'
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - script: |
        python -m pip install --upgrade pip setuptools
        pip install bandit
        bandit -r . -c .bandit.yaml
      displayName: 'Security audit'

  - template: azure-templates.yml

- stage: Comprehensive
  dependsOn: Initial
  condition: succeeded()
  jobs:
  - job: 'Coverage'
    pool:
      vmImage: 'Ubuntu-16.04'
    strategy:
      maxParallel: 4

    steps:
    - task: UsePythonVersion@0

    # NOTE: If CDBS cannot take the hit, disable --remote-data
    - script: |
        sudo apt-get install libxml2-utils
        python -m pip install --upgrade pip setuptools
        pip install numpy scipy beautifulsoup4 astropy pytest-cov pytest-astropy synphot codecov
        pip install -e .
        pytest --pyargs stsynphot docs --cov --cov-report html --open-files --remote-data
      env:
        PYSYN_CDBS: $(PYSYN_CDBS)
      displayName: 'Run tests'

    - script: codecov -t $codecov_token
      env:
        codecov_token: $(CODECOV_TOKEN)
      displayName: 'Calculate coverage'

  - job: 'LinkCheck'
    pool:
      vmImage: 'Ubuntu-16.04'
    strategy:
      maxParallel: 4

    steps:
    - task: UsePythonVersion@0

    - script: |
        python -m pip install --upgrade pip setuptools
        pip install sphinx-astropy
        pip install -e .
    - bash: |
        cd docs
        make linkcheck
      displayName: 'Run docs link check'

  - template: azure-templates.yml
    parameters:
      name: 'Older_Versions'
      numpyCmd: 'pip install numpy==1.16.6'
      astropyCmd: 'pip install astropy==3.2.3'
      scipyCmd: 'pip install scipy==1.1.0'
      synphotCmd: 'pip install synphot==0.2.1'
      pythonVersion: '3.6'

  - template: azure-templates.yml
    parameters:
      name: 'Dev_Astropy_Synphot'
      astropyCmd: 'pip install git+https://github.com/astropy/astropy.git@master#egg=astropy'
      synphotCmd: 'pip install git+https://github.com/spacetelescope/synphot_refactor.git@master#egg=synphot'
      pythonVersion: '3.8'

  - template: azure-templates.yml
    parameters:
      name: 'Windows'
      vmImage: 'vs2017-win2016'

  - template: azure-templates.yml
    parameters:
      name: 'OSX'
      vmImage: 'macOS-10.15'

schedules:
- cron: "0 6 * * 2"
  displayName: Weekly Tuesday 6AM build
  branches:
    include:
    - master
